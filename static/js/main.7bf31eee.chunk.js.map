{"version":3,"sources":["Components/Error/ErrorBoundary.js","Components/HOC/Animated.js","Components/Error/ErrorButton.js","Components/Cities/Cities.js","Components/Cities/index.js","Components/Pages/CitiesPage.js","Components/Spinner/index.js","Components/Spinner/Spinner.js","Components/HOC/WithData.js","Components/Context/index.js","Components/HOC/WithWeatherApiService.js","Components/HOC/WithOWMService.js","Components/CurrentWeather/CurrentWeather.js","Components/CurrentWeather/index.js","Components/Actions/actions.js","Components/Forecast/Forecast.js","Components/Forecast/index.js","Components/Hourly/Hourly.js","Components/Hourly/index.js","Components/Pages/WeatherPage.js","Components/Details/Details.js","Components/Details/index.js","Components/Pages/DetailsPage.js","Components/App/index.js","Components/App/App.js","Components/Redux/currentReducer.js","Components/Redux/forecastReducer.js","Components/Redux/hourlyReducer.js","Components/Redux/detailsReducer.js","Components/Redux/index.js","Services/WeatherApiService.js","Services/OWMService.js","index.js"],"names":["ErrorBoundary","state","hasError","this","setState","props","children","Component","ErrorIndicator","className","Animated","Wrapped","didMount","setTimeout","Cities","cities","name","temp","weather","logo","loading","error","elements","map","index","key","to","Element","style","transitionDelay","Fragment","CitiesPage","Spinner","role","withData","methodName","param","dataRequest","dataLoaded","dataError","service","then","data","catch","React","createContext","OWMProvider","Provider","OWMConsumer","Consumer","WeatherAPIProvider","WeatherAPIConsumer","WithWeatherApiService","WithOWMService","openWeatherMapService","CurrentWeather","date","d","Date","getDay","getDate","slice","getMonth","getFullYear","setTheme","desc","icon","high","low","wind","humidity","city","url","formatDate","src","alt","compose","connect","current","dispatch","type","payload","currentWeatherLoaded","theme","WithData","Forecast","componentUpdate","weatherService","getForecastWeather","onWeatherLoaded","onError","forecast","weekday","day","console","log","forecastLoaded","Hourly","getHours","min","max","forEach","el","in_min","out_min","rainChance","height","dateValue","time","rain","Number","hourly","hourlyLoaded","WeatherPage","withRouter","id","match","params","Details","deg","out","getMinutes","string","charAt","toUpperCase","clouds","pressure","rain1h","sunrise","sunset","feels_like","temp_max","temp_min","weatherDesc","weatherIcon","windDeg","windSpeed","formatTime","capitalizeFirstLetter","degreesToDirection","details","detailsLoaded","DetailsPage","App","componentDidUpdate","store","getState","document","documentElement","basename","path","exact","component","currentReducer","action","forecastReducer","hourlyReducer","detailsReducer","initialState","themeReducer","createStore","ls","require","sleep","ms","Promise","resolve","weatherApiService","_apiBase","_apiKey","getResource","storage","a","get","fetch","res","ok","Error","status","json","_incrementApiCallCount","set","getCurrentWeather","city_name","_transformCurrentWeather","_transformForecastWeather","getHourlyWeather","_transformHourlytWeather","weatherData","location","condition","code","text","last_updated_epoch","temp_c","Math","round","weatherType","weatherTypeDesc","weatherTypeIcon","forecastData","forecastday","arr","hour","time_epoch","chance_of_rain","length","push","count","undefined","warn","_units","getDetailWeather","_transformDetailWeather","dt","main","speed","list","days","p","item","hours","newItem","hours2","abs","sys","all","description","update","ReactDOM","render","value","getElementById","subscribe"],"mappings":"yaAGaA,G,MAAb,4MAEIC,MAAQ,CACJC,UAAU,GAHlB,kEAOQC,KAAKC,SAAS,CACVF,UAAU,MARtB,+BAaQ,OAAIC,KAAKF,MAAMC,SACJ,kBAAC,EAAD,MAEJC,KAAKE,MAAMC,aAhB1B,GAAmCC,cAoB7BC,EAAiB,kBAEnB,yBAAKC,UAAU,oBACX,0BAAMA,UAAU,gBAChB,yBAAKA,UAAU,eAAc,sCAA7B,6BCJOC,GCrBkBH,YDAhB,kBAAM,SAACI,GACpB,mNACIV,MAAQ,CAAEW,UAAU,GADxB,kEAGyB,IAAD,OAChBC,YAAW,WACP,EAAKT,SAAS,CAAEQ,UAAU,MAC3B,OANX,+BASc,IACEA,EAAaT,KAAKF,MAAlBW,SACR,OACI,yBAAKH,UAAS,mBAAcG,GAAY,YACpC,kBAACD,EAAYR,KAAKE,YAblC,GAAqBE,gBEEnBO,G,kNAEFb,MAAQ,CACJc,OAAQ,CACJ,CAAEC,KAAM,SAAUC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QAClD,CAAEH,KAAM,mBAAoBC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QAC5D,CAAEH,KAAM,cAAeC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QACvD,CAAEH,KAAM,gBAAiBC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QACzD,CAAEH,KAAM,kBAAmBC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QAC3D,CAAEH,KAAM,QAASC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QACjD,CAAEH,KAAM,cAAeC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QACvD,CAAEH,KAAM,OAAQC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QAChD,CAAEH,KAAM,SAAUC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QAClD,CAAEH,KAAM,gBAAiBC,KAAM,EAAGC,QAAS,OAAQC,KAAM,QACzD,CAAEH,KAAM,QAASC,KAAM,EAAGC,QAAS,OAAQC,KAAM,SAErDC,SAAS,EACTC,OAAO,G,kEAIPlB,KAAKC,SAAS,CACVgB,SAAS,M,+BAIP,IAGAE,EAFanB,KAAKF,MAAhBc,OAEgBQ,KAAI,WAAWC,GAAX,IAAGR,EAAH,EAAGA,KAAH,OACxB,kBAAC,EAAD,CAASS,IAAKT,EAAMA,KAAMA,EAAMU,GAAE,gBAAWV,GAAQQ,MAAOA,OAGhE,OACI,yBAAKf,UAAU,qBACX,yBAAKA,UAAU,gBACVa,Q,GApCAf,cA2CfoB,EAAU,SAAC,GAAqB,IAAnBX,EAAkB,EAAlBA,KAAMQ,EAAY,EAAZA,MAEfI,EAAQ,CACVC,gBAAgB,GAAD,OAAa,IAARL,EAAL,MAGnB,OACI,kBAAC,IAAMM,SAAP,KACI,wBAAIrB,UAAU,0BAA0BmB,MAAOA,GAC3C,kBAAC,IAAD,CAAMF,GAAE,gBAAWV,IAASA,MCvD7BF,ED8DAJ,EAASI,GEjDTiB,G,MAVI,WACf,OACI,yBAAKtB,UAAU,OACX,yBAAKA,UAAS,uBACV,kBAAC,EAAD,UCPDuB,G,mLCGP,OACI,yBAAKvB,UAAU,sBACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,yBAAyBwB,KAAK,UACzC,0BAAMxB,UAAU,WAAhB,qB,GANaF,cCwCtB2B,EAvCE,SAACC,GAAD,OAAgB,SAACxB,GAC9B,yLAIQ,IAAMyB,EAAQjC,KAAKE,MAAM+B,MAFT,EAG+BjC,KAAKE,MAA5CgC,EAHQ,EAGRA,YAAaC,EAHL,EAGKA,WAAYC,EAHjB,EAGiBA,UACjCF,IAEAlC,KAAKE,MAAMmC,QAAQL,GAAYC,GAC1BK,MAAK,SAACC,GACHJ,EAAWI,MAEdC,OAAM,WACHJ,SAbhB,+BAiBc,IAAD,EAE4BpC,KAAKE,MAA9BqC,EAFH,EAEGA,KAAMtB,EAFT,EAESA,QAASC,EAFlB,EAEkBA,MAEvB,OAAID,EACO,kBAAC,EAAD,MAGPC,EACO,kBAAC,EAAD,MAIP,kBAAC,EAAD,KACI,kBAACV,EAAD,iBAAaR,KAAKE,MAAlB,CAAyBqC,KAAMA,UA/B/C,GAAqBnC,e,ECArBqC,IAAMC,gBAFIC,E,EAAVC,SACUC,E,EAAVC,S,EAMAL,IAAMC,gBAFIK,E,EAAVH,SACUI,E,EAAVF,SCUWG,EAhBe,kBAAM,SAACzC,GAEjC,OAAO,SAACN,GACJ,OACI,kBAAC8C,EAAD,MAEQ,SAACX,GACG,OAAQ,kBAAC7B,EAAD,iBAAaN,EAAb,CACJmC,QAASA,WCQtBa,EAhBQ,kBAAM,SAAC1C,GAE1B,OAAO,SAACN,GACJ,OACI,kBAAC2C,EAAD,MAEQ,SAACM,GACG,OAAQ,kBAAC3C,EAAD,iBAAaN,EAAb,CACJmC,QAASc,W,gBCD/BC,E,yKAESC,GACP,IAAMC,EAAI,IAAIC,KAAY,IAAPF,GAEnB,MADgB,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACnEC,EAAEE,UAAY,MAAQ,IAAMF,EAAEG,WAAWC,OAAO,GAC1D,KAAO,KAAOJ,EAAEK,WAAa,IAAID,OAAO,GAAK,IAAMJ,EAAEM,gB,0CAG1C,IAAD,EACqB5D,KAAKE,MAA1BY,EADA,EACRyB,KAAQzB,KAAQ+C,EADR,EACQA,SAEpBA,EADA/C,EAAO,GACE,MACFA,EAAO,EACL,OAEA,U,+BAIP,IAAD,EAKDd,KAAKE,MAAMqC,KAFXc,EAHC,EAGDA,KAAMvC,EAHL,EAGKA,KAAMgD,EAHX,EAGWA,KAAMC,EAHjB,EAGiBA,KAAMC,EAHvB,EAGuBA,KACxBC,EAJC,EAIDA,IAAKC,EAJJ,EAIIA,KAAMC,EAJV,EAIUA,SAGPC,EAASpE,KAAKE,MAAM+B,MAApBmC,KAEJC,EAAM,WAKV,OAJID,IACAC,EAAM,YAAcD,GAIpB,yBAAK9D,UAAU,8BACX,wBAAIA,UAAU,wCAAwCN,KAAKsE,WAAWjB,IACtE,wBAAI/C,UAAU,wCACV,kBAAC,IAAD,CAAMiB,GAAG,WAAU,uBAAGjB,UAAU,qBAAsB8D,IAE1D,yBAAK9D,UAAU,8CACX,yBACIA,UAAU,4BACViE,IAAG,4CAAuCR,EAAvC,WAAsDS,IAAI,KACjE,wBAAIlE,UAAU,8BAA8BwD,IAEhD,yBAAKxD,UAAU,yDACX,wBAAIA,UAAU,8CACTQ,GAEL,yBAAKR,UAAU,6CACX,yBAAKA,UAAU,iCACX,uBAAGA,UAAU,gDACb,0BAAMA,UAAU,8BAA8B0D,IAElD,yBAAK1D,UAAU,iCACX,uBAAGA,UAAU,kDACb,0BAAMA,UAAU,8BAA8B2D,KAGtD,yBAAK3D,UAAU,qEACX,yBAAKA,UAAU,+BAAf,YAGA,yBAAKA,UAAU,+BAAf,UACQ6D,EADR,MAGA,yBAAK7D,UAAU,+BAAf,QAGA,yBAAKA,UAAU,+BAAf,UACQ4D,GADR,SAKR,kBAAC,IAAD,CAAM3C,GAAI8C,EAAK/D,UAAU,iDAAzB,qB,GA3EaF,aCRdgD,EDqGAqB,YACXC,aAZoB,kBAAM,qBAAGC,YAEN,SAACC,GACxB,MAAO,CACH1C,YAAa,kBAAM0C,EEtFhB,CACHC,KAAM,mCFsFN1C,WAAY,SAACI,GAAD,OAAUqC,EElFM,SAACrC,GACjC,MAAO,CACHsC,KAAM,gCACNC,QAASvC,GF+EsBwC,CAAqBxC,KACpDH,UAAW,kBAAMwC,EE3Ed,CACHC,KAAM,gCACNC,QAAS5D,IAHkB,IAACA,GF6E5B2C,SAAU,SAACmB,GAAD,OAAWJ,EE9FL,SAACI,GACrB,MAAO,CAAEH,KAAM,YAAaC,QAASE,GF6FHnB,CAASmB,SAM3C9B,IACA+B,EAAS,qBACT1E,IAJWkE,CAKbrB,GGpGI8B,G,kNAEFC,gBAAkB,WACd,EAAKC,eACAC,mBAAmB,UACnB/C,KAAK,EAAKgD,iBACV9C,MAAM,EAAK+C,U,EAGpBD,gBAAkB,SAACE,GACf,EAAKvF,SAAS,CACVuF,WACAvE,SAAS,K,yDAINoC,GACP,IAAMC,EAAI,IAAIC,KAAY,IAAPF,GAEnB,MAAO,CACHoC,QAFY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAEtCnC,EAAEE,UACnBkC,KAAM,IAAMpC,EAAEG,WAAWC,OAAO,GAAK,KAAO,KAAOJ,EAAEK,WAAa,IAAID,OAAO,M,iCAI1E5C,GACP,OAAIA,EAAO,EACD,IAAN,OAAWA,GAEL,GAAN,OAAUA,K,+BAIR,IAAD,OACCyB,EAAOvC,KAAKE,MAAMqC,KAGxB,OAFAoD,QAAQC,IAAIrD,GAGR,yBAAKjC,UAAU,uBACX,kBAAC,IAAMqB,SAAP,KACKY,EAAKnB,KAAI,WAAuBC,GAAW,IAA/BgC,EAA8B,EAA9BA,KAAMvC,EAAwB,EAAxBA,KAAMiD,EAAkB,EAAlBA,KAAkB,EAChB,EAAKO,WAAWjB,GAAjCoC,EADiC,EACjCA,QAASC,EADwB,EACxBA,IAEf,OADAD,EAAqB,IAAVpE,EAAe,QAAUoE,EAC7B,kBAAC,EAAD,CAASnE,IAAK+B,EAAMoC,QAASA,EAASC,IAAKA,EAAK5E,KAAMA,EAAMiD,KAAMA,EAAM1C,MAAOA,a,GA3CvFjB,cAmDjBoB,EAAU,SAAC,GAAyC,IAAvCkE,EAAsC,EAAtCA,IAAKD,EAAiC,EAAjCA,QAAS3E,EAAwB,EAAxBA,KAAMiD,EAAkB,EAAlBA,KAAM1C,EAAY,EAAZA,MAErCI,EAAQ,CACRC,gBAAgB,GAAD,OAAa,GAARL,EAAL,MAGnB,OAAO,yBAAKf,UAAU,qCAAqCmB,MAAOA,GAC9D,yBAAKnB,UAAU,uBACVmF,GAEL,yBAAKnF,UAAU,uBACVoF,GAEL,yBAAKnB,IAAG,4CAAuCR,EAAvC,WAAsDS,IAAI,KAClE,yBAAKlE,UAAU,uBACVQ,KCzEEoE,EDwFAT,YACXC,aAXoB,kBAAM,qBAAGc,aAEN,SAACZ,GACxB,MAAO,CACH1C,YAAa,kBAAM0C,EDrDhB,CACHC,KAAM,4BCqDN1C,WAAY,SAACI,GAAD,OAAUqC,EDjDA,SAACrC,GAC3B,MAAO,CACHsC,KAAM,yBACNC,QAASvC,GC8CsBsD,CAAetD,KAC9CH,UAAW,kBAAMwC,ED1Cd,CACHC,KAAM,yBACNC,QAAS5D,IAHY,IAACA,OCiD1BgC,IACA+B,EAAS,sBACT1E,IAJWkE,CAKbS,G,oBEjFIY,E,yKAESzC,GAEP,OADU,IAAIE,KAAY,IAAPF,GACV0C,WAAa,M,+BAGhB,IAAD,SAEmB/F,KAAKE,MAArB8E,EAFH,EAEGA,MAAOzC,EAFV,EAEUA,KAEXyD,EAAM,EAAGC,EAAM,EAMnB,OALA1D,EAAK2D,SAAQ,SAACC,GACVH,EAAMG,EAAGrF,KAAOkF,EAAMG,EAAGrF,KAAOkF,EAChCC,EAAME,EAAGrF,KAAOmF,EAAME,EAAGrF,KAAOmF,KAIhC,yBAAK3F,UAAU,qBACX,kBAAC,IAAMqB,SAAP,KACI,kBAAC,IAAD,CAAiBrB,UAAU,2BACvB,yBAAKA,UAAU,kBACViC,EAAKnB,KAAI,WAA6BC,GAAW,IA1B9D+E,EAAgBC,EA0BSvF,EAAoC,EAApCA,KAAMuC,EAA8B,EAA9BA,KAAMiD,EAAwB,EAAxBA,WACjBC,GAAazF,GA3BjCsF,EA2BuCJ,KAAe,KA3BtCK,EA2BiC,OAALJ,EA1BFG,GAAUC,EA2B9BG,EAAuB,IAAVnF,EAAe,MAAQ,EAAKiD,WAAWjB,GAC1D,OACI,kBAAC,EAAD,CACI/B,IAAK+B,EACLvC,KAAMA,EACN2F,KAAMD,EACNF,WAAYA,EACZC,OAAQA,EACRvB,MAAOA,EACP3D,MAAOA,e,GAjC1BjB,aA4CfoB,EAAU,SAAC,GAA+C,IAA7CV,EAA4C,EAA5CA,KAAM2F,EAAsC,EAAtCA,KAAMF,EAAgC,EAAhCA,OAAQD,EAAwB,EAAxBA,WAAYjF,EAAY,EAAZA,MAEzCI,EAAQ,CACV8E,OAAO,GAAD,OAAKA,EAAL,MACN7E,gBAAgB,GAAD,OAAa,IAARL,EAAL,MAGfqF,EAAO,GAUX,OAT2B,IAAvBC,OAAOL,KACPI,EACI,yBAAKpG,UAAU,wBACX,yBAAKiE,IAAG,+CAAkDC,IAAI,KAC9D,wCAAU8B,EAAV,QAMR,yBAAKhG,UAAU,6BACX,yBAAKA,UAAU,iBAAiBmB,MAAOA,GACnC,yBAAKnB,UAAU,wBAAwBQ,GACtC4F,EACD,yBAAKpG,UAAU,wBACX,8BAAOmG,OC/EZX,EDgGArB,YACXC,aAXoB,kBAAM,qBAAGkC,WAEN,SAAChC,GACxB,MAAO,CACH1C,YAAa,kBAAM0C,EHzChB,CACHC,KAAM,0BGyCN1C,WAAY,SAACI,GAAD,OAAUqC,EHrCF,SAACrC,GACzB,MAAO,CACHsC,KAAM,uBACNC,QAASvC,GGkCsBsE,CAAatE,KAC5CH,UAAW,kBAAMwC,EH9Bd,CACHC,KAAM,uBACNC,QAAS5D,IAHU,IAACA,OGqCxB+B,IACAgC,EAAS,oBACT1E,IAJWkE,CAKbqB,GEvEagB,EAtBKC,aAAW,YAAgB,IACrCC,EADoC,EAAZC,MACXC,OAAbF,GAIN,OAHKA,IACDA,EAAK,UAGL,yBAAK1G,UAAU,OACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,4BACX,kBAAC,EAAD,CAAgB2B,MAAO,CAAEmC,KAAM4C,MAEnC,yBAAK1G,UAAU,2BACX,kBAAC,EAAD,CAAQ2B,MAAO,CAAEmC,KAAM4C,OAG/B,yBAAK1G,UAAU,yBACX,kBAAC,EAAD,CAAU2B,MAAO,CAAEmC,KAAM4C,UCdnCG,G,uLAEiBC,GACf,IACIC,EAAM,IAMV,MAPe,CAAC,MAAO,KAAM,MAAO,IAAK,MAAO,KAAM,MAAO,IAAK,MAAO,KAAM,MAAO,IAAK,MAAO,KAAM,MAAO,KAExGnB,SAAQ,SAACC,EAAI9E,GACZ+F,GAAQ,MAAW,KAAW/F,IAC9BgG,EAAMlB,MAGPkB,I,iCAGAhE,GACP,IAAMC,EAAI,IAAIC,KAAY,IAAPF,GAEnB,MADgB,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACnEC,EAAEE,UAAY,MAAQ,IAAMF,EAAEG,WAAWC,OAAO,GAC1D,KAAO,KAAOJ,EAAEK,WAAa,IAAID,OAAO,GAAK,IAAMJ,EAAEM,gB,iCAGpDP,GACP,IAAMC,EAAI,IAAIC,KAAY,IAAPF,GACnB,OAAQC,EAAEyC,WAAa,KAAO,IAAMzC,EAAEgE,cAAc5D,OAAO,K,4CAGzC6D,GAClB,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAO7D,MAAM,K,+BAG/C,IAAD,EAEoE1D,KAAKE,MAAMqC,KAD5Ec,EADH,EACGA,KAAMe,EADT,EACSA,KAAMsD,EADf,EACeA,OAAQvD,EADvB,EACuBA,SAAUwD,EADjC,EACiCA,SAAUC,EAD3C,EAC2CA,OAAQC,EADnD,EACmDA,QAASC,EAD5D,EAC4DA,OAAQhH,EADpE,EACoEA,KAAMiH,EAD1E,EAC0EA,WAC3EC,EAFC,EAEDA,SAAUC,EAFT,EAESA,SAAUC,EAFnB,EAEmBA,YAAaC,EAFhC,EAEgCA,YAAaC,EAF7C,EAE6CA,QAASC,EAFtD,EAEsDA,UAEvDhE,EAAM,IAKV,OAJID,IACAC,EAAM,SAAWD,GAIjB,yBAAK9D,UAAU,sBACX,kBAAC,IAAD,CAAMA,UAAU,uBAAuBiB,GAAI8C,GAAK,uBAAG/D,UAAU,sBAC7D,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,uBAAf,gBACA,yBAAKA,UAAU,uBAAf,UAAyCN,KAAKsI,WAAWjF,GAAzD,YAAkErD,KAAKsE,WAAWjB,KAClF,yBAAK/C,UAAU,uBAAf,YACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAMiB,GAAG,UAAUjB,UAAU,sBACzB,uBAAGA,UAAU,qBAAsB8D,KAI/C,yBAAK9D,UAAU,2BACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,2BAA2BQ,GAC1C,yBAAKR,UAAU,mCACX,yBAAKA,UAAU,wBAAf,cACA,yBAAKA,UAAU,uBAAuByH,GACtC,yBAAKzH,UAAU,uBAAf,OACA,yBAAKA,UAAU,uBAAuB2H,GACtC,yBAAK3H,UAAU,uBAAf,OACA,yBAAKA,UAAU,uBAAuB0H,KAG9C,yBAAK1H,UAAU,sCACX,yBACIA,UAAU,uBACViE,IAAG,4CAAuC4D,EAAvC,WAA6D3D,IAAI,KACxE,yBAAKlE,UAAU,0BAAf,UAA4CN,KAAKuI,sBAAsBL,OAG/E,yBAAK5H,UAAU,mBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,kBAAf,aACA,yBAAKA,UAAU,kBAAf,UAAoCoH,EAApC,OACA,yBAAKpH,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBAAf,UAAoC6D,EAApC,OACA,yBAAK7D,UAAU,kBAAf,YACA,yBAAKA,UAAU,kBAAf,UAAoCqH,EAApC,SACY,OAAXC,EAAkB,oCACf,yBAAKtH,UAAU,kBAAf,oCACA,yBAAKA,UAAU,kBAAf,UAAoCsH,EAApC,SACE,KAEN,yBAAKtH,UAAU,kBAAf,kBACA,yBAAKA,UAAU,kBAAf,UAAoCN,KAAKwI,mBAAmBJ,KAC5D,yBAAK9H,UAAU,kBAAf,cACA,yBAAKA,UAAU,kBAAf,UAAoC+H,EAApC,WAGR,yBAAK/H,UAAU,iBACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,kBAAf,gBACA,yBAAKA,UAAU,kBAAkBN,KAAKsI,WAAWT,IACjD,yBAAKvH,UAAU,kBAAf,eACA,yBAAKA,UAAU,kBAAkBN,KAAKsI,WAAWR,a,GAhG3D1H,cCTP+G,ED6HA1C,YACXC,aAXoB,kBAAM,qBAAG+D,YAEN,SAAC7D,GACxB,MAAO,CACH1C,YAAa,kBAAM0C,ENnDhB,CACHC,KAAM,2BMmDN1C,WAAY,SAACI,GAAD,OAAUqC,EN/CD,SAACrC,GAC1B,MAAO,CACHsC,KAAM,wBACNC,QAASvC,GM4CsBmG,CAAcnG,KAC7CH,UAAW,kBAAMwC,ENxCd,CACHC,KAAM,wBACNC,QAAS5D,IAHW,IAACA,OM+CzBgC,IACA+B,EAAS,oBACT1E,IAJWkE,CAKb0C,GElHawB,EAZK5B,aAAW,YAAgB,IACrCC,EADoC,EAAZC,MACXC,OAAbF,GAIN,OAHKA,IACDA,EAAK,UAED,yBAAK1G,UAAU,OACnB,yBAAKA,UAAU,iDACX,kBAAC,EAAD,CAAS2B,MAAO,CAAEmC,KAAM4C,UCXrB4B,E,4MCObC,mBAAqB,WAEnB,OADkB,EAAK3I,MAAM4I,MAAMC,WAA3B/D,OAEN,IAAK,MACHgE,SAASC,gBAAgB3I,UAAY,WACrC,MACF,IAAK,OACH0I,SAASC,gBAAgB3I,UAAY,YACrC,MACF,IAAK,OACH0I,SAASC,gBAAgB3I,UAAY,YACrC,MACF,QACE0I,SAASC,gBAAgB3I,UAAY,c,uDAOzC,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAe4I,SAAS,gBACtB,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWvC,IACjC,kBAAC,IAAD,CAAOqC,KAAK,YAAYE,UAAWvC,IACnC,kBAAC,IAAD,CAAOqC,KAAK,UAAUE,UAAWzH,IACjC,kBAAC,IAAD,CAAOuH,KAAK,WAAWC,OAAK,EAACC,UAAWV,IACxC,kBAAC,IAAD,CAAOQ,KAAK,eAAeE,UAAWV,U,GA7BfvI,aCsBlBkJ,EA7BQ,SAACxJ,EAAOyJ,GAC3B,OAAQA,EAAO1E,MAEX,IAAK,gCACD,MAAO,CACHtC,KAAM,GACNtB,SAAS,EACTC,OAAO,GAGf,IAAK,gCACD,MAAO,CACHqB,KAAMgH,EAAOzE,QACb7D,SAAS,EACTC,MAAO,MAGf,IAAK,gCACD,MAAO,CACHqB,KAAM,GACNtB,SAAS,EACTC,MAAOqI,EAAOzE,SAGtB,QACI,OAAOhF,EAAM6E,UCIV6E,EA7BS,SAAC1J,EAAOyJ,GAC5B,OAAQA,EAAO1E,MAEX,IAAK,yBACD,MAAO,CACHtC,KAAM,GACNtB,SAAS,EACTC,OAAO,GAGf,IAAK,yBACD,MAAO,CACHqB,KAAMgH,EAAOzE,QACb7D,SAAS,EACTC,MAAO,MAGf,IAAK,yBACD,MAAO,CACHqB,KAAM,GACNtB,SAAS,EACTC,MAAOqI,EAAOzE,SAGtB,QACI,OAAOhF,EAAM0F,WCIViE,EA7BO,SAAC3J,EAAOyJ,GAC1B,OAAQA,EAAO1E,MAEX,IAAK,uBACD,MAAO,CACHtC,KAAM,GACNtB,SAAS,EACTC,OAAO,GAGf,IAAK,uBACD,MAAO,CACHqB,KAAMgH,EAAOzE,QACb7D,SAAS,EACTC,MAAO,MAGf,IAAK,uBACD,MAAO,CACHqB,KAAM,GACNtB,SAAS,EACTC,MAAOqI,EAAOzE,SAGtB,QACI,OAAOhF,EAAM8G,SCIV8C,EA7BQ,SAAC5J,EAAOyJ,GAC3B,OAAQA,EAAO1E,MAEX,IAAK,wBACD,MAAO,CACHtC,KAAM,GACNtB,SAAS,EACTC,OAAO,GAGf,IAAK,wBACD,MAAO,CACHqB,KAAMgH,EAAOzE,QACb7D,SAAS,EACTC,MAAO,MAGf,IAAK,wBACD,MAAO,CACHqB,KAAM,GACNtB,SAAS,EACTC,MAAOqI,EAAOzE,SAGtB,QACI,OAAOhF,EAAM6E,UCjBnBgF,EAAe,CACjBhF,QAAS,CACLpC,KAAM,GACNtB,SAAS,EACTC,OAAO,GAEX0F,OAAQ,CACJrE,KAAM,GACNtB,SAAS,EACTC,OAAO,GAEXsE,SAAU,CACNjD,KAAM,GACNtB,SAAS,EACTC,OAAO,GAEXuH,QAAS,CACLlG,KAAM,GACNtB,SAAS,EACTC,OAAO,GAEX8D,MAAO,QAGL4E,EAAe,SAAC9J,EAAOyJ,GACzB,OAAQA,EAAO1E,MACX,IAAK,YACD,OAAO0E,EAAOzE,QAElB,QACI,OAAOhF,EAAMkF,QAcnB8D,EAAQe,aAVE,WAAmC,IAAlC/J,EAAiC,uDAAzB6J,EAAcJ,EAAW,uCAC9C,MAAO,CACH5E,QAAS2E,EAAexJ,EAAOyJ,GAC/B/D,SAAUgE,EAAgB1J,EAAOyJ,GACjC3C,OAAQ6C,EAAc3J,EAAOyJ,GAC7Bd,QAASiB,EAAe5J,EAAOyJ,GAC/BvE,MAAO4E,EAAa9J,EAAOyJ,O,0BChD7BO,GAAKC,EAAQ,IAInB,SAASC,GAAMC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIzJ,WAAWyJ,EAASF,M,ICLhDH,GAAKC,EAAQ,IAInB,SAASC,GAAMC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIzJ,WAAWyJ,EAASF,M,UCUhDG,GAAoB,I,iDFLtBC,SAAW,iC,KACXC,QAAU,kC,KAEVC,Y,yCAAc,WAAOtI,EAAOuI,GAAd,kBAAAC,EAAA,yDACNlI,EAAOuH,GAAGY,IAAIF,GADR,iCAIYG,MAAM,GAAD,OAAI,EAAKN,UAAT,OAAoBpI,IAJrC,WAIA2I,EAJA,QAKGC,GALH,sBAMI,IAAIC,MAAJ,0BAA6B7I,EAA7B,sBAAgD2I,EAAIG,SANxD,uBAQOH,EAAII,OARX,OAQNzI,EARM,OASN,EAAK0I,yBACLnB,GAAGoB,IAAIV,EAASjI,EArBd,OAWI,yBAaJyH,GAAM,KAbF,iCAcHzH,GAdG,4C,6DAiBd4I,kB,yCAAoB,WAAOC,GAAP,gBAAAX,EAAA,sEACG,EAAKF,YAAL,2BAAqC,EAAKD,QAA1C,cAAuDc,EAAvD,WAA2E,8BAD9E,cACV7I,EADU,yBAET,EAAK8I,yBAAyB9I,IAFrB,2C,2DAKpB8C,mB,yCAAqB,WAAO+F,GAAP,gBAAAX,EAAA,sEACE,EAAKF,YAAL,4BAAsC,EAAKD,QAA3C,cAAwDc,EAAxD,WAA4E,+BAD9E,cACX7I,EADW,yBAEV,EAAK+I,0BAA0B/I,IAFrB,2C,2DAKrBgJ,iB,yCAAmB,gCAAAd,EAAA,6DAASrG,EAAT,EAASA,KAAT,SACI,EAAKmG,YAAL,4BAAsC,EAAKD,QAA3C,cAAwDlG,EAAxD,WAAuE,6BAA+BA,GAD1G,cACT7B,EADS,yBAER,EAAKiJ,yBAAyBjJ,IAFtB,2C,2DAKnB8I,yBAA2B,SAACI,GAAiB,IAGjC5K,EAWJ4K,EAZAC,SACI7K,KAHgC,EAcpC4K,EATA9G,QALoC,IAMhCgH,UACIC,EAP4B,EAO5BA,KACA7H,EAR4B,EAQ5BA,KACA8H,EAT4B,EAS5BA,KAEJC,EAXgC,EAWhCA,mBACAC,EAZgC,EAYhCA,OAGR,MAAO,CACHlL,KAAMA,EACNwC,KAAMyI,EACNhL,KAAMkL,KAAKC,MAAMF,GACjBG,YAAaN,EACbO,gBAAiBN,EACjBO,gBAAiBrI,EACjBC,KAAMgI,KAAKC,MAAM,GACjBhI,IAAK+H,KAAKC,MAAM,K,KAIxBX,0BAA4B,SAACe,GACzB,OAAOA,G,KAGXb,yBAA2B,YAAqE,IAAtDc,EAAqD,EAAjE9G,SAAY8G,YAA0BR,EAA2B,EAAtCnH,QAAWmH,mBAC1DS,EAAM,GAkBZ,OAjBAD,EAAYpG,SAAQ,YAAc,EAAXsG,KACdtG,SAAQ,YAAmD,IAAhDuG,EAA+C,EAA/CA,WAAYhG,EAAmC,EAAnCA,KAAMsF,EAA6B,EAA7BA,OAAQW,EAAqB,EAArBA,eAClCH,EAAII,QAAU,IAGdF,EAAaX,GACbS,EAAIK,KACA,CACIvJ,KAAMoJ,EACNhG,KAAMA,EACN3F,KAAMkL,KAAKC,MAAMF,GACjBzF,WAAYoG,UAMzBH,G,KAGXtB,uBAAyB,WACrB,IAAI4B,EAAQ/C,GAAGY,IAAI,kBACnBmC,OAAkBC,IAAVD,EAAsBA,EAAQ,EACtCA,GAAgB,EAChB/C,GAAGoB,IAAI,iBAAkB2B,EApGnB,OAqGNlH,QAAQoH,KAAR,qEAA2EF,EAA3E,QEvFF1J,GAAwB,I,iDDN1BkH,SAAW,2C,KACXC,QAAU,mC,KACV0C,OAAS,gB,KAETzC,Y,yCAAc,WAAOtI,EAAOuI,GAAd,kBAAAC,EAAA,yDACNlI,EAAOuH,GAAGY,IAAIF,GADR,iCAGYG,MAAM,GAAD,OAAI,EAAKN,UAAT,OAAoBpI,EAApB,kBAAmC,EAAKqI,UAHzD,WAGAM,EAHA,QAIGC,GAJH,sBAKI,IAAIC,MAAJ,0BAA6B7I,EAA7B,sBAAgD2I,EAAIG,SALxD,uBAOOH,EAAII,OAPX,OAONzI,EAPM,OAQN,EAAK0I,yBACLnB,GAAGoB,IAAIV,EAASjI,EArBd,OAYI,yBAYJyH,GAAM,KAZF,iCAaHzH,GAbG,4C,6DAgBd4I,kB,yCAAoB,gCAAAV,EAAA,6DAASrG,EAAT,EAASA,KAAT,SACG,EAAKmG,YAAL,oBAA8BnG,GAA9B,OAAqC,EAAK4I,QAAU,kCAAoC5I,GAD3F,cACV7B,EADU,yBAET,EAAK8I,yBAAyB9I,IAFrB,2C,2DAKpB8C,mB,yCAAqB,gCAAAoF,EAAA,6DAASrG,EAAT,EAASA,KAAT,SACE,EAAKmG,YAAL,qBAA+BnG,GAA/B,OAAsC,EAAK4I,QAAU,kCAAoC5I,GAD3F,cACX7B,EADW,yBAEV,EAAK+I,0BAA0B/I,IAFrB,2C,2DAKrB0K,iB,yCAAmB,gCAAAxC,EAAA,6DAASrG,EAAT,EAASA,KAAT,SACI,EAAKmG,YAAL,oBAA8BnG,GAA9B,OAAqC,EAAK4I,QAAU,gCAAkC5I,GAD1F,cACT7B,EADS,yBAER,EAAK2K,wBAAwB3K,IAFrB,2C,2DAKnB8I,yBAA2B,SAACI,GAAiB,IAErC0B,EAYA1B,EAZA0B,GACAtM,EAWA4K,EAXA5K,KAHoC,EAcpC4K,EAVA2B,KACItM,EALgC,EAKhCA,KACAkH,EANgC,EAMhCA,SACAC,EAPgC,EAOhCA,SACA9D,EARgC,EAQhCA,SAEJpD,EAIA0K,EAJA1K,QAEIsM,EAEJ5B,EAHAvH,KACImJ,MAZgC,EAgBjBtM,EAAQ,GAAvBqM,EAhBgC,EAgBhCA,KAAMrJ,EAhB0B,EAgB1BA,KACd,MAAO,CACHlD,KAAMA,EACNwC,KAAM8J,EACNrM,KAAMkL,KAAKC,MAAMnL,GACjBgD,KAAMsJ,EACNrJ,KAAMA,EACNC,KAAMgI,KAAKC,MAAMjE,GACjB/D,IAAK+H,KAAKC,MAAMhE,GAChB/D,KAAMmJ,EACNlJ,SAAUA,I,KAIlBmH,0BAA4B,YAAe,IAAZgC,EAAW,EAAXA,KACrB9H,EAAW,GACX+H,EAAO,GA0Bb,IAAK,IAAMC,KAzBXF,EAAKpH,SAAQ,SAACuH,GAAU,IACZN,EAAgCM,EAAhCN,GAAYrM,EAAoB2M,EAA5BL,KAAQtM,KADD,EACqB2M,EAAZ1M,QACO,GAA3BiG,EAFW,EAEXA,GAAIoG,EAFO,EAEPA,KAAMrJ,EAFC,EAEDA,KACZV,EAAO,IAAIE,KAAU,IAAL4J,GAChBzH,EAAMrC,EAAKI,UACXiK,EAAQrK,EAAK0C,WAEb4H,EAAU,CACZtK,KAAM8J,EACNrM,KAAMkL,KAAKC,MAAMnL,GACjBoL,YAAalF,EACbmF,gBAAiBiB,EACjBrJ,KAAMA,GAGV,QAAkB+I,IAAdS,EAAK7H,GAAoB,CACzB,IACMkI,EADQ,IAAIrK,KAAsB,IAAjBgK,EAAK7H,GAAKrC,MACZ0C,WACjBiG,KAAK6B,IAAIH,EAAQ,IAAM1B,KAAK6B,IAAID,EAAS,MACzCL,EAAK7H,GAAOiI,QAGhBJ,EAAK7H,GAAOiI,KAGJJ,EACZ/H,EAASoH,KAAKW,EAAKC,IAEvB,OAAOhI,G,KAGX0H,wBAA0B,SAACzB,GAAiB,IAGpC0B,EAuBA1B,EAvBA0B,GACAtM,EAsBA4K,EAtBA5K,KAJmC,EA0BnC4K,EArBAqC,IACIjG,EAN+B,EAM/BA,QACAC,EAP+B,EAO/BA,OAGAiG,EAgBJtC,EAjBA/D,OACIqG,IAV+B,EA0BnCtC,EAdA2B,KACItM,EAb+B,EAa/BA,KACAmH,EAd+B,EAc/BA,SACAD,EAf+B,EAe/BA,SACAL,EAhB+B,EAgB/BA,SACAxD,EAjB+B,EAiB/BA,SACA4D,EAlB+B,EAkB/BA,WAlB+B,EA0BnC0D,EANAvH,KACImJ,EArB+B,EAqB/BA,MACAjG,EAtB+B,EAsB/BA,IAEJV,EAEA+E,EAFA/E,KAxBmC,EA0BnC+E,EADA1K,QAMQ,GAFRiN,EA7BmC,EA6BnCA,YACAjK,EA9BmC,EA8BnCA,KAGA6D,EAAS,KAMb,YAJakF,IAATpG,IACAkB,EAASlB,EAAK,OAGX,CACHrD,KAAM8J,EACN/I,KAAMvD,EACNgH,QAASA,EACTC,OAAQA,EACRJ,OAAQqG,EACR7F,YAAa8F,EACb7F,YAAapE,EACbjD,KAAMkL,KAAKC,MAAMnL,GACjBmH,SAAU+D,KAAKC,MAAMhE,GACrBD,SAAUgE,KAAKC,MAAMjE,GACrBD,WAAYiE,KAAKC,MAAMlE,GACvBJ,SAAUA,EACVxD,SAAUA,EACVkE,UAAWgF,EACXjF,QAAShB,EACTQ,OAAQA,I,KAIhBqD,uBAAyB,WACrB,IAAI4B,EAAQ/C,GAAGY,IAAI,kBACnBmC,OAAkBC,IAAVD,EAAsBA,EAAQ,EACtCA,GAAgB,EAChB/C,GAAGoB,IAAI,iBAAkB2B,EA1KnB,OA2KNlH,QAAQoH,KAAR,iEAAuEF,EAAvE,QC3JFoB,GAAS,WACXC,IAASC,OACL,kBAACxL,EAAD,CAAayL,MAAOjL,IAChB,kBAACJ,EAAD,CAAoBqL,MAAOhE,IACvB,kBAAC,IAAD,CAAUtB,MAAOA,GACb,kBAAC,EAAD,CAAKA,MAAOA,OAItBE,SAASqF,eAAe,UAGlCJ,KACAnF,EAAMwF,UAAUL,M","file":"static/js/main.7bf31eee.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './ErrorBoundary.scss';\r\n\r\nexport class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            hasError: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n        return this.props.children;\r\n    }\r\n};\r\n\r\nconst ErrorIndicator = () => (\r\n\r\n    <div className=\"error__container\">\r\n        <span className=\"error__icon\" />\r\n        <div className=\"error__desc\"><h1>Error!</h1>Something went wrong...</div>\r\n    </div>\r\n)\r\n\r\nexport {ErrorIndicator};\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\n\r\nconst Animated = () => (Wrapped) => {\r\n    return class extends Component {\r\n        state = { didMount: false }\r\n\r\n        componentDidMount() {\r\n            setTimeout(() => {\r\n                this.setState({ didMount: true })\r\n            }, 500)\r\n        }\r\n\r\n        render() {\r\n            const { didMount } = this.state\r\n            return (\r\n                <div className={`_animate ${didMount && '_active'}`}>\r\n                    <Wrapped {...this.props} />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default Animated;\r\n","import React, { Component } from 'react';\n\nexport class ErrorButton extends Component {\n\n  state = {\n    renderError: false\n  };\n\n  render() {\n    if (this.state.renderError) {\n      this.foo.bar = 0;\n    }\n\n    return (\n      <button\n        className=\"error-button btn btn-danger btn-sm\"\n        onClick={() => this.setState({renderError: true})}>\n        Throw Error\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Animated from '../HOC/Animated';\r\nimport './Cities.scss';\r\n\r\nclass Cities extends Component {\r\n\r\n    state = {\r\n        cities: [\r\n            { name: 'Moscow', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Saint Petersburg', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Novosibirsk', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Yekaterinburg', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Nizhny Novgorod', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Kazan', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Chelyabinsk', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Omsk', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Samara', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Rostov-on-Don', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Miami', temp: 5, weather: 'Rain', logo: 'logo' }\r\n        ],\r\n        loading: false,\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { cities } = this.state;\r\n\r\n        const elements = cities.map(({ name }, index) => (\r\n            <Element key={name} name={name} to={`/city/${name}`} index={index} />\r\n        ));\r\n\r\n        return (\r\n            <div className=\"cities__container\">\r\n                <div className=\"cities__grid\">\r\n                    {elements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Element = ({ name, index }) => {\r\n\r\n    const style = {\r\n        transitionDelay: `${index * 0.05}s`\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2 className=\"cities__name slide-left\" style={style}>\r\n                <Link to={`/city/${name}`}>{name}</Link>\r\n            </h2>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default Animated(Cities);","import Cities from './Cities';\r\n\r\nexport default Cities;","import React from 'react';\r\nimport Cities from '../Cities';\r\n\r\nimport './Pages.scss';\r\n\r\nconst CitiesPage = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className={`app__full-container`}>\r\n                <Cities />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CitiesPage;","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport './Spinner.scss'\r\n\r\nexport default class Spinner extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"spinner__container\">\r\n                <div className=\"spinner__inner-container\">\r\n                    <div className=\"spinner-border spinner\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport Spinner from '../Spinner';\r\nimport { ErrorBoundary, ErrorIndicator } from '../Error';\r\n\r\nconst withData = (methodName) => (Wrapped) => {\r\n    return class extends Component {\r\n\r\n        componentDidMount() {\r\n\r\n            const param = this.props.param;\r\n            const { dataRequest, dataLoaded, dataError } = this.props;\r\n            dataRequest();\r\n\r\n            this.props.service[methodName](param)\r\n                .then((data) => {\r\n                    dataLoaded(data);\r\n                })\r\n                .catch(() => {\r\n                    dataError();\r\n                });\r\n        }\r\n\r\n        render() {\r\n\r\n            const { data, loading, error } = this.props;\r\n\r\n            if (loading) {\r\n                return <Spinner />;\r\n            }\r\n\r\n            if (error) {\r\n                return <ErrorIndicator />;\r\n            }\r\n\r\n            return (\r\n                <ErrorBoundary>\r\n                    <Wrapped {...this.props} data={data} />\r\n                </ErrorBoundary>\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport default withData;\r\n","import React from 'react'\r\n\r\nconst {\r\n    Provider: OWMProvider,\r\n    Consumer: OWMConsumer\r\n} = React.createContext();\r\n\r\nconst {\r\n    Provider: WeatherAPIProvider,\r\n    Consumer: WeatherAPIConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    OWMProvider,\r\n    OWMConsumer,\r\n    WeatherAPIProvider,\r\n    WeatherAPIConsumer\r\n};","import React from 'react';\r\nimport { WeatherAPIConsumer } from '../Context';\r\n\r\nconst WithWeatherApiService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <WeatherAPIConsumer>\r\n                {\r\n                    (service) => {\r\n                        return (<Wrapped {...props}\r\n                            service={service} />);\r\n                    }\r\n                }\r\n            </WeatherAPIConsumer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default WithWeatherApiService;\r\n","import React from 'react';\r\nimport { OWMConsumer } from '../Context';\r\n\r\nconst WithOWMService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <OWMConsumer>\r\n                {\r\n                    (openWeatherMapService) => {\r\n                        return (<Wrapped {...props}\r\n                            service={openWeatherMapService} />);\r\n                    }\r\n                }\r\n            </OWMConsumer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default WithOWMService;\r\n","import React, { Component } from 'react';\r\nimport './CurrentWeather.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { WithData } from '../HOC';\r\nimport { connect } from 'react-redux';\r\nimport { currentWeatherRequest, currentWeatherLoaded, currentWeatherError, setTheme } from '../Actions'\r\nimport Animated from '../HOC/Animated';\r\nimport { compose } from 'redux';\r\nimport WithOWMService from '../HOC/WithOWMService';\r\n\r\nclass CurrentWeather extends Component {\r\n\r\n    formatDate(date) {\r\n        const d = new Date(date * 1000);\r\n        const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        return (weekday[d.getDay()] + \", \" + (\"0\" + d.getDate()).slice(-2)\r\n            + \".\" + (\"0\" + (d.getMonth() + 1)).slice(-2) + \".\" + d.getFullYear());\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { data: { temp }, setTheme } = this.props;\r\n        if (temp > 15) {\r\n            setTheme('hot');\r\n        } else if (temp > 5) {\r\n            setTheme('warm');\r\n        } else {\r\n            setTheme('cold');\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            date, temp, desc, icon, high,\r\n            low, wind, humidity\r\n        } = this.props.data;\r\n\r\n        const { city } = this.props.param;\r\n\r\n        let url = '/details';\r\n        if (city) {\r\n            url = '/details/' + city\r\n        }\r\n\r\n        return (\r\n            <div className=\"current-weather__container\">\r\n                <h2 className=\"current-weather-header__date fade-in\">{this.formatDate(date)}</h2>\r\n                <h2 className=\"current-weather-header__city fade-in\">\r\n                    <Link to='/cities'><i className=\"fa fa-map-marker\" />{city}</Link>\r\n                </h2>\r\n                <div className=\"current-weather__type-container slide-left\">\r\n                    <img\r\n                        className=\"current-weather__type-img\"\r\n                        src={`https://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"\" />\r\n                    <h3 className=\"current-weather__type-desc\">{desc}</h3>\r\n                </div>\r\n                <div className=\"current-weather__temp current-weather-temp__container\">\r\n                    <h1 className=\"current-weather-temp__temp-value rotate-in\">\r\n                        {temp}\r\n                    </h1>\r\n                    <div className=\"current-weather__hilo-container rotate-in\">\r\n                        <div className=\"current-weather__hilo-element\">\r\n                            <i className=\"current-weather__hilo-icon fa fa-chevron-up\" />\r\n                            <span className=\"current-weather__hilo-temp\">{high}</span>\r\n                        </div>\r\n                        <div className=\"current-weather__hilo-element\">\r\n                            <i className=\"current-weather__hilo-icon fa fa-chevron-down\" />\r\n                            <span className=\"current-weather__hilo-temp\">{low}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"current-weather__info current-weather-info__container slide-right\">\r\n                        <div className=\"current-weather-info__label\">\r\n                            HUMIDITY\r\n                                </div>\r\n                        <div className=\"current-weather-info__value\">\r\n                            {`${humidity}%`}\r\n                        </div>\r\n                        <div className=\"current-weather-info__label\">\r\n                            WIND\r\n                                </div>\r\n                        <div className=\"current-weather-info__value\">\r\n                            {`${wind}`}m/s\r\n                                </div>\r\n                    </div>\r\n                </div>\r\n                <Link to={url} className=\"btn current-weather__more-button slide-bottom\">More details</Link>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = () => ({ current }) => (current);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dataRequest: () => dispatch(currentWeatherRequest()),\r\n        dataLoaded: (data) => dispatch(currentWeatherLoaded(data)),\r\n        dataError: () => dispatch(currentWeatherError()),\r\n        setTheme: (theme) => dispatch(setTheme(theme)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithOWMService(),\r\n    WithData('getCurrentWeather'), // use function like map\r\n    Animated()\r\n)(CurrentWeather);","import CurrentWeather from './CurrentWeather';\r\n\r\nexport default CurrentWeather;\r\n","\r\nexport const selectCity = (id) => {\r\n    return { type: 'SELECT_CITY', payload: id };\r\n}\r\n\r\nexport const setTheme = (theme) => {\r\n    return { type: 'SET_THEME', payload: theme };\r\n}\r\n\r\nexport const currentWeatherRequest = () => {\r\n    return {\r\n        type: 'FETCH_CURRENT_WEATHER_REQUEST'\r\n    };\r\n}\r\n\r\nexport const currentWeatherLoaded = (data) => {\r\n    return {\r\n        type: 'FETCH_CURRENT_WEATHER_SUCCESS',\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const currentWeatherError = (error) => {\r\n    return {\r\n        type: 'FETCH_CURRENT_WEATHER_FAILURE',\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport const forecastRequest = () => {\r\n    return {\r\n        type: 'FETCH_FORECAST_REQUEST'\r\n    };\r\n}\r\n\r\nexport const forecastLoaded = (data) => {\r\n    return {\r\n        type: 'FETCH_FORECAST_SUCCESS',\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const forecastError = (error) => {\r\n    return {\r\n        type: 'FETCH_FORECAST_FAILURE',\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport const hourlyRequest = () => {\r\n    return {\r\n        type: 'FETCH_HOURLY_REQUEST'\r\n    };\r\n}\r\n\r\nexport const hourlyLoaded = (data) => {\r\n    return {\r\n        type: 'FETCH_HOURLY_SUCCESS',\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const hourlyError = (error) => {\r\n    return {\r\n        type: 'FETCH_HOURLY_FAILURE',\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport const detailsRequest = () => {\r\n    return {\r\n        type: 'FETCH_DETAILS_REQUEST'\r\n    };\r\n}\r\n\r\nexport const detailsLoaded = (data) => {\r\n    return {\r\n        type: 'FETCH_DETAILS_SUCCESS',\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const detailsError = (error) => {\r\n    return {\r\n        type: 'FETCH_DETAILS_FAILURE',\r\n        payload: error\r\n    };\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport './Forecast.scss'\r\nimport { WithData, WithOWMService } from '../HOC'\r\nimport Animated from '../HOC/Animated';\r\nimport { forecastRequest, forecastLoaded, forecastError } from '../Actions'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Forecast extends Component {\r\n\r\n    componentUpdate = () => {\r\n        this.weatherService\r\n            .getForecastWeather(\"Moscow\")\r\n            .then(this.onWeatherLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onWeatherLoaded = (forecast) => {\r\n        this.setState({\r\n            forecast,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    formatDate(date) {\r\n        const d = new Date(date * 1000);\r\n        const weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        return {\r\n            weekday: weekday[d.getDay()],\r\n            day: (\"0\" + d.getDate()).slice(-2) + \".\" + (\"0\" + (d.getMonth() + 1)).slice(-2)\r\n        };\r\n    }\r\n\r\n    formatTemp(temp) {\r\n        if (temp > 0) {\r\n            return `+${temp}`;\r\n        } else {\r\n            return `${temp}`;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.data;\r\n        console.log(data);\r\n\r\n        return (\r\n            <div className=\"forecast__container\">\r\n                <React.Fragment>\r\n                    {data.map(({ date, temp, icon }, index) => {\r\n                        let { weekday, day } = this.formatDate(date);\r\n                        weekday = (index === 0) ? 'Today' : weekday;\r\n                        return <Element key={date} weekday={weekday} day={day} temp={temp} icon={icon} index={index} />;\r\n                    })}\r\n                </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Element = ({ day, weekday, temp, icon, index }) => {\r\n\r\n    let style = {\r\n        transitionDelay: `${index * 0.1}s`\r\n    };\r\n\r\n    return <div className=\"forecast-item__container rotate-in\" style={style}>\r\n        <div className=\"forecast-item__date\">\r\n            {weekday}\r\n        </div>\r\n        <div className=\"forecast-item__date\">\r\n            {day}\r\n        </div>\r\n        <img src={`https://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"\" />\r\n        <div className=\"forecast-item__temp\">\r\n            {temp}\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nconst mapStateToProps = () => ({ forecast }) => (forecast);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dataRequest: () => dispatch(forecastRequest()),\r\n        dataLoaded: (data) => dispatch(forecastLoaded(data)),\r\n        dataError: () => dispatch(forecastError()),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithOWMService(),\r\n    WithData('getForecastWeather'), // use function like map\r\n    Animated()\r\n)(Forecast);","import Forecast from './Forecast';\r\nexport default Forecast;","import React, { Component } from 'react';\r\nimport './Hourly.scss';\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport { WithData, WithWeatherApiService } from '../HOC';\r\nimport Animated from '../HOC/Animated';\r\nimport { hourlyRequest, hourlyLoaded, hourlyError } from '../Actions'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction map(x, in_min, in_max, out_min, out_max) {\r\n    return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n}\r\n\r\nclass Hourly extends Component {\r\n\r\n    formatDate(date) {\r\n        const d = new Date(date * 1000);\r\n        return d.getHours() + 'h';\r\n    }\r\n\r\n    render() {\r\n\r\n        const { theme, data } = this.props;\r\n\r\n        let min = 0, max = 0;\r\n        data.forEach((el) => {\r\n            min = el.temp < min ? el.temp : min;\r\n            max = el.temp > max ? el.temp : max;\r\n        });\r\n\r\n        return (\r\n            <div className=\"hourly__container\">\r\n                <React.Fragment>\r\n                    <ScrollContainer className=\"hourly__scrollcontainer\">\r\n                        <div className=\"hourly__scroll\">\r\n                            {data.map(({ temp, date, rainChance }, index) => {\r\n                                let height = map(temp, min, max, 100, 180);\r\n                                const dateValue = (index === 0) ? 'Now' : this.formatDate(date);\r\n                                return (\r\n                                    <Element\r\n                                        key={date}\r\n                                        temp={temp}\r\n                                        time={dateValue}\r\n                                        rainChance={rainChance}\r\n                                        height={height}\r\n                                        theme={theme}\r\n                                        index={index} />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </ScrollContainer>\r\n                </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Element = ({ temp, time, height, rainChance, index }) => {\r\n\r\n    const style = {\r\n        height: `${height}px`,\r\n        transitionDelay: `${index * 0.05}s`\r\n    };\r\n\r\n    let rain = '';\r\n    if (Number(rainChance) !== 0) {\r\n        rain = (\r\n            <div className=\"hourly-element__rain\">\r\n                <img src={`https://openweathermap.org/img/wn/10d@2x.png`} alt=\"\" />\r\n                <span>{`${rainChance}%`}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"hourly__element-container\">\r\n            <div className='hourly-element' style={style}>\r\n                <div className=\"hourly-element__temp\">{temp}</div>\r\n                {rain}\r\n                <div className=\"hourly-element__time\">\r\n                    <span>{time}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = () => ({ hourly }) => (hourly);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dataRequest: () => dispatch(hourlyRequest()),\r\n        dataLoaded: (data) => dispatch(hourlyLoaded(data)),\r\n        dataError: () => dispatch(hourlyError()),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithWeatherApiService(),\r\n    WithData('getHourlyWeather'), // use function like map\r\n    Animated()\r\n)(Hourly);","import Hourly from './Hourly';\r\nexport default Hourly;","import React from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport CurrentWeather from \"../CurrentWeather\";\r\nimport Forecast from \"../Forecast\";\r\nimport Hourly from \"../Hourly\";\r\n\r\nimport './Pages.scss';\r\n\r\nconst WeatherPage = withRouter(({ match }) => {\r\n    let { id } = match.params;\r\n    if (!id) {\r\n        id = 'Moscow';\r\n    }\r\n    return (\r\n        <div className=\"app\">\r\n            <div className='app__top-container'>\r\n                <div className=\"app-top__current-wrapper\">\r\n                    <CurrentWeather param={{ city: id }} />\r\n                </div>\r\n                <div className=\"app-top__hourly-wrapper\">\r\n                    <Hourly param={{ city: id }} />\r\n                </div>\r\n            </div>\r\n            <div className=\"app__bottom-container\">\r\n                <Forecast param={{ city: id }} />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default WeatherPage;","import React, { Component } from 'react';\r\nimport WithData from '../HOC/WithData';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport WithOWMService from '../HOC/WithOWMService';\r\nimport Animated from '../HOC/Animated';\r\nimport { connect } from 'react-redux';\r\nimport { detailsRequest, detailsLoaded, detailsError } from '../Actions'\r\n\r\nimport './Details.scss';\r\n\r\nclass Details extends Component {\r\n\r\n    degreesToDirection(deg) {\r\n        const dirArr = ['NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW', 'N'];\r\n        let out = 'N';\r\n        dirArr.forEach((el, index) => {\r\n            if (deg >= (360 / 32 + 360 / 16 * index)) {\r\n                out = el;\r\n            }\r\n        });\r\n        return out;\r\n    }\r\n\r\n    formatDate(date) {\r\n        const d = new Date(date * 1000);\r\n        const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        return (weekday[d.getDay()] + \", \" + (\"0\" + d.getDate()).slice(-2)\r\n            + \".\" + (\"0\" + (d.getMonth() + 1)).slice(-2) + \".\" + d.getFullYear());\r\n    }\r\n\r\n    formatTime(date) {\r\n        const d = new Date(date * 1000);\r\n        return (d.getHours() + ':' + (\"0\" + d.getMinutes()).slice(-2));\r\n    }\r\n\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    render() {\r\n        const { date, city, clouds, humidity, pressure, rain1h, sunrise, sunset, temp, feels_like,\r\n            temp_max, temp_min, weatherDesc, weatherIcon, windDeg, windSpeed } = this.props.data;\r\n\r\n        let url = '/';\r\n        if (city) {\r\n            url = '/city/' + city;\r\n        }\r\n\r\n        return (\r\n            <div className=\"details__container\">\r\n                <Link className=\"details__button-back\" to={url}><i className=\"fa fa-arrow-left\" /></Link>\r\n                <div className=\"details__column fade-in\">\r\n                    <div className=\"details__city\">\r\n                        <div className=\"details__city-label\">Last updated</div>\r\n                        <div className=\"details__city-value\">{`${this.formatTime(date)} ${this.formatDate(date)}`}</div>\r\n                        <div className=\"details__city-label\">Location</div>\r\n                        <div className=\"details__city-value\">\r\n                            <Link to=\"/cities\" className=\"details__city-link\">\r\n                                <i className=\"fa fa-map-marker\" />{city}\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"details__main-container\">\r\n                        <div className=\"details__temp-group\">\r\n                            <div className=\"details__temp rotate-in\">{temp}</div>\r\n                            <div className=\"details__temp-details rotate-in\">\r\n                                <div className=\"details__label-temp \">Feels like</div>\r\n                                <div className=\"details__value temp\">{feels_like}</div>\r\n                                <div className=\"details__label-temp\">Min</div>\r\n                                <div className=\"details__value temp\">{temp_min}</div>\r\n                                <div className=\"details__label-temp\">Max</div>\r\n                                <div className=\"details__value temp\">{temp_max}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"details__weather-group slide-right\">\r\n                            <img\r\n                                className=\"details__weather-img\"\r\n                                src={`https://openweathermap.org/img/wn/${weatherIcon}@2x.png`} alt=\"\" />\r\n                            <div className=\"details__weather-label\">{`${this.capitalizeFirstLetter(weatherDesc)}`}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bottom__columns\">\r\n                        <div className=\"bottom__left\">\r\n                            <div className=\"bottom__col slide-left\">\r\n                                <div className=\"details__label\">Cloudness</div>\r\n                                <div className=\"details__value\">{`${clouds} %`}</div>\r\n                                <div className=\"details__label\">Humidity</div>\r\n                                <div className=\"details__value\">{`${humidity} %`}</div>\r\n                                <div className=\"details__label\">Pressure</div>\r\n                                <div className=\"details__value\">{`${pressure} hPa`}</div>\r\n                                {rain1h !== null ? <>\r\n                                    <div className=\"details__label\">Amount of rain for the last hour</div>\r\n                                    <div className=\"details__value\">{`${rain1h} mm`}</div>\r\n                                </> : null\r\n                                }\r\n                                <div className=\"details__label\">Wind Direction</div>\r\n                                <div className=\"details__value\">{`${this.degreesToDirection(windDeg)}`}</div>\r\n                                <div className=\"details__label\">Wind speed</div>\r\n                                <div className=\"details__value\">{`${windSpeed} m/s`}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bottom__right\">\r\n                            <div className=\"bottom__col slide-right\">\r\n                                <div className=\"details__label\">Sunrise time</div>\r\n                                <div className=\"details__value\">{this.formatTime(sunrise)}</div>\r\n                                <div className=\"details__label\">Sunset time</div>\r\n                                <div className=\"details__value\">{this.formatTime(sunset)}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = () => ({ details }) => (details);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dataRequest: () => dispatch(detailsRequest()),\r\n        dataLoaded: (data) => dispatch(detailsLoaded(data)),\r\n        dataError: () => dispatch(detailsError())\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithOWMService(),\r\n    WithData('getDetailWeather'), // use function like map\r\n    Animated()\r\n)(Details);","import Details from './Details';\r\n\r\nexport default Details;","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Details from '../Details';\r\nimport './Pages.scss';\r\n\r\nconst DetailsPage = withRouter(({ match }) => {\r\n    let { id } = match.params;\r\n    if (!id) {\r\n        id = 'Moscow';\r\n    }\r\n    return (<div className=\"app\">\r\n        <div className='app__full-container app__full-container--grad'>\r\n            <Details param={{ city: id }} />\r\n        </div>\r\n    </div>);\r\n});\r\n\r\nexport default DetailsPage;","import App from './App';\r\n\r\nexport default App;","import React, { Component } from 'react';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { ErrorBoundary } from '../Error';\n\nimport { WeatherPage, CitiesPage, DetailsPage } from '../Pages';\n\nexport default class App extends Component {\n\n  componentDidUpdate = () => {\n    const { theme } = this.props.store.getState();\n    switch (theme) {\n      case 'hot':\n        document.documentElement.className = 'hotTheme';\n        break;\n      case 'warm':\n        document.documentElement.className = 'warmTheme';\n        break;\n      case 'cold':\n        document.documentElement.className = 'coldTheme';\n        break;\n      default:\n        document.documentElement.className = 'warmTheme';\n        break;\n    }\n  }\n\n\n  render() {// TODO: change basename to weather-app\n    return (\n      <ErrorBoundary>\n        <BrowserRouter basename=\"/weather-app\">\n          <Route path=\"/\" exact component={WeatherPage} />\n          <Route path=\"/city/:id\" component={WeatherPage} />\n          <Route path=\"/cities\" component={CitiesPage} />\n          <Route path=\"/details\" exact component={DetailsPage} />\n          <Route path=\"/details/:id\" component={DetailsPage} />\n        </BrowserRouter>\n      </ErrorBoundary>\n    );\n  }\n}","const currentReducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_CURRENT_WEATHER_REQUEST':\r\n            return {\r\n                data: {},\r\n                loading: true,\r\n                error: false\r\n            };\r\n\r\n        case 'FETCH_CURRENT_WEATHER_SUCCESS':\r\n            return {\r\n                data: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_CURRENT_WEATHER_FAILURE':\r\n            return {\r\n                data: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state.current;\r\n    }\r\n}\r\n\r\nexport default currentReducer;","const forecastReducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_FORECAST_REQUEST':\r\n            return {\r\n                data: {},\r\n                loading: true,\r\n                error: false\r\n            };\r\n\r\n        case 'FETCH_FORECAST_SUCCESS':\r\n            return {\r\n                data: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_FORECAST_FAILURE':\r\n            return {\r\n                data: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state.forecast;\r\n    }\r\n}\r\n\r\nexport default forecastReducer;","const hourlyReducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_HOURLY_REQUEST':\r\n            return {\r\n                data: {},\r\n                loading: true,\r\n                error: false\r\n            };\r\n\r\n        case 'FETCH_HOURLY_SUCCESS':\r\n            return {\r\n                data: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_HOURLY_FAILURE':\r\n            return {\r\n                data: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state.hourly;\r\n    }\r\n}\r\n\r\nexport default hourlyReducer;","const detailsReducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'FETCH_DETAILS_REQUEST':\r\n            return {\r\n                data: {},\r\n                loading: true,\r\n                error: false\r\n            };\r\n\r\n        case 'FETCH_DETAILS_SUCCESS':\r\n            return {\r\n                data: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n\r\n        case 'FETCH_DETAILS_FAILURE':\r\n            return {\r\n                data: [],\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n\r\n        default:\r\n            return state.current;\r\n    }\r\n}\r\n\r\nexport default detailsReducer;","import { createStore } from 'redux';\r\n\r\nimport currentReducer from './currentReducer';\r\nimport forecastReducer from './forecastReducer';\r\nimport hourlyReducer from './hourlyReducer';\r\nimport detailsReducer from './detailsReducer';\r\n\r\n\r\nconst initialState = {\r\n    current: {\r\n        data: {},\r\n        loading: true,\r\n        error: false\r\n    },\r\n    hourly: {\r\n        data: {},\r\n        loading: true,\r\n        error: false\r\n    },\r\n    forecast: {\r\n        data: {},\r\n        loading: true,\r\n        error: false\r\n    },\r\n    details: {\r\n        data: {},\r\n        loading: true,\r\n        error: false\r\n    },\r\n    theme: 'warm'\r\n};\r\n\r\nconst themeReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_THEME':\r\n            return action.payload;\r\n\r\n        default:\r\n            return state.theme;\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    return {\r\n        current: currentReducer(state, action),\r\n        forecast: forecastReducer(state, action),\r\n        hourly: hourlyReducer(state, action),\r\n        details: detailsReducer(state, action),\r\n        theme: themeReducer(state, action)\r\n    };\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport { store };","const ls = require('localstorage-ttl');\r\n\r\nconst dayMs = 24 * 60 * 60 * 1000;\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default class WeatherApiService {\r\n\r\n    _apiBase = 'https://api.weatherapi.com/v1/';\r\n    _apiKey = '3ad9b2d2abb245dbb8e205619202010';\r\n\r\n    getResource = async (param, storage) => {\r\n        let data = ls.get(storage);\r\n        if (!data || false) {\r\n            //'http://api.weatherapi.com/v1/forecast.json?key=3ad9b2d2abb245dbb8e205619202010&q=Moscow&days=3'\r\n            const res = await fetch(`${this._apiBase}${param}`);\r\n            if (!res.ok) {\r\n                throw new Error(`Could not fetch ${param}, received ${res.status}`);\r\n            }\r\n            data = await res.json();\r\n            this._incrementApiCallCount();\r\n            ls.set(storage, data, dayMs);\r\n        }\r\n        // console.log(storage + '_dump', data);\r\n        await sleep(1000);\r\n        return data;\r\n    }\r\n\r\n    getCurrentWeather = async (city_name) => {\r\n        const data = await this.getResource(`current.json?key=${this._apiKey}&q=${city_name}&days=5`, 'current_weather_weatherapi')\r\n        return this._transformCurrentWeather(data);\r\n    };\r\n\r\n    getForecastWeather = async (city_name) => {\r\n        const data = await this.getResource(`forecast.json?key=${this._apiKey}&q=${city_name}&days=5`, 'forecast_weather_weatherapi')\r\n        return this._transformForecastWeather(data);\r\n    };\r\n\r\n    getHourlyWeather = async ({ city }) => {\r\n        const data = await this.getResource(`forecast.json?key=${this._apiKey}&q=${city}&days=3`, 'hourly_weather_weatherapi_' + city)\r\n        return this._transformHourlytWeather(data);\r\n    }\r\n\r\n    _transformCurrentWeather = (weatherData) => {\r\n        const {\r\n            location: {\r\n                name,\r\n            },\r\n            current: {\r\n                condition: {\r\n                    code,\r\n                    icon,\r\n                    text\r\n                },\r\n                last_updated_epoch,\r\n                temp_c,\r\n            }\r\n        } = weatherData;\r\n        return {\r\n            name: name,\r\n            date: last_updated_epoch,\r\n            temp: Math.round(temp_c),\r\n            weatherType: code,\r\n            weatherTypeDesc: text,\r\n            weatherTypeIcon: icon,\r\n            high: Math.round(0),\r\n            low: Math.round(0)\r\n        };\r\n    };\r\n\r\n    _transformForecastWeather = (forecastData) => {\r\n        return forecastData;\r\n    };\r\n\r\n    _transformHourlytWeather = ({ forecast: { forecastday }, current: { last_updated_epoch } }) => {\r\n        const arr = [];\r\n        forecastday.forEach(({ hour }) => {\r\n            hour.forEach(({ time_epoch, time, temp_c, chance_of_rain }) => {\r\n                if (arr.length >= 24) {\r\n                    return;\r\n                }\r\n                if (time_epoch > last_updated_epoch) {\r\n                    arr.push(\r\n                        {\r\n                            date: time_epoch,\r\n                            time: time,\r\n                            temp: Math.round(temp_c),\r\n                            rainChance: chance_of_rain\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n        });\r\n        return arr;\r\n    }\r\n\r\n    _incrementApiCallCount = () => {\r\n        let count = ls.get('api-call-count');\r\n        count = count !== undefined ? count : 0;\r\n        count = count + 1;\r\n        ls.set('api-call-count', count, dayMs);\r\n        console.warn(`WARNING: API CALL, YOU ONLY HAVE 1'000'000 of these. Count ${count}.`);\r\n    }\r\n\r\n};\r\n\r\n\r\n// const exclude = '&exclude=alerts,minutely,hourly,daily'\r\n// const exclude = '';","const ls = require('localstorage-ttl');\r\n\r\nconst dayMs = 24 * 60 * 60 * 1000;\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default class OWMService {\r\n\r\n    _apiBase = 'https://api.openweathermap.org/data/2.5/';\r\n    _apiKey = 'ee09c403a1b18f3bc221c981d5a7cf99';\r\n    _units = '&units=metric';\r\n\r\n    getResource = async (param, storage) => {\r\n        let data = ls.get(storage);\r\n        if (!data || false) {\r\n            const res = await fetch(`${this._apiBase}${param}&appid=${this._apiKey}`);\r\n            if (!res.ok) {\r\n                throw new Error(`Could not fetch ${param}, received ${res.status}`);\r\n            }\r\n            data = await res.json();\r\n            this._incrementApiCallCount();\r\n            ls.set(storage, data, dayMs);\r\n        }\r\n        //console.log(storage + '_dump', data);\r\n        await sleep(1000);\r\n        return data;\r\n    }\r\n\r\n    getCurrentWeather = async ({ city }) => {\r\n        const data = await this.getResource(`weather?q=${city}${this._units}`, 'current_weather_openweathermap_' + city)\r\n        return this._transformCurrentWeather(data);\r\n    };\r\n\r\n    getForecastWeather = async ({ city }) => {\r\n        const data = await this.getResource(`forecast?q=${city}${this._units}`, 'forecast_weather_openweathermap' + city)\r\n        return this._transformForecastWeather(data);\r\n    };\r\n\r\n    getDetailWeather = async ({ city }) => {\r\n        const data = await this.getResource(`weather?q=${city}${this._units}`, 'detail_weather_openweathermap' + city)\r\n        return this._transformDetailWeather(data);\r\n    };\r\n\r\n    _transformCurrentWeather = (weatherData) => {\r\n        const {\r\n            dt,\r\n            name,\r\n            main: {\r\n                temp,\r\n                temp_max,\r\n                temp_min,\r\n                humidity\r\n            },\r\n            weather,\r\n            wind: {\r\n                speed\r\n            }\r\n        } = weatherData;\r\n\r\n        const { main, icon } = weather[0];\r\n        return {\r\n            name: name,\r\n            date: dt,\r\n            temp: Math.round(temp),\r\n            desc: main,\r\n            icon: icon,\r\n            high: Math.round(temp_max),\r\n            low: Math.round(temp_min),\r\n            wind: speed,\r\n            humidity: humidity\r\n        };\r\n    };\r\n\r\n    _transformForecastWeather = ({ list }) => {\r\n        const forecast = [];\r\n        const days = {};\r\n        list.forEach((item) => {\r\n            const { dt, main: { temp }, weather } = item;\r\n            const { id, main, icon } = weather[0];\r\n            const date = new Date(dt * 1000);\r\n            const day = date.getDate();\r\n            const hours = date.getHours();\r\n\r\n            const newItem = {\r\n                date: dt,\r\n                temp: Math.round(temp),\r\n                weatherType: id,\r\n                weatherTypeDesc: main,\r\n                icon: icon\r\n            };\r\n\r\n            if (days[day] !== undefined) {\r\n                const date2 = new Date(days[day].date * 1000);\r\n                const hours2 = date2.getHours();\r\n                if (Math.abs(hours - 12) < Math.abs(hours2 - 12)) {\r\n                    days[day] = newItem;\r\n                }\r\n            } else {\r\n                days[day] = newItem;\r\n            }\r\n        });\r\n        for (const p in days) {\r\n            forecast.push(days[p]);\r\n        }\r\n        return forecast;\r\n    };\r\n\r\n    _transformDetailWeather = (weatherData) => {\r\n\r\n        const {\r\n            dt,\r\n            name,\r\n            sys: {\r\n                sunrise,\r\n                sunset\r\n            },\r\n            clouds: {\r\n                all\r\n            },\r\n            main: {\r\n                temp,\r\n                temp_min,\r\n                temp_max,\r\n                pressure,\r\n                humidity,\r\n                feels_like\r\n            },\r\n            wind: {\r\n                speed,\r\n                deg\r\n            },\r\n            rain,\r\n            weather\r\n        } = weatherData;\r\n\r\n        const {\r\n            description,\r\n            icon\r\n        } = weather[0];\r\n\r\n        let rain1h = null;\r\n\r\n        if (rain !== undefined) {\r\n            rain1h = rain['1h'];\r\n        }\r\n\r\n        return {\r\n            date: dt,\r\n            city: name,\r\n            sunrise: sunrise,\r\n            sunset: sunset,\r\n            clouds: all,\r\n            weatherDesc: description,\r\n            weatherIcon: icon,\r\n            temp: Math.round(temp),\r\n            temp_min: Math.round(temp_min),\r\n            temp_max: Math.round(temp_max),\r\n            feels_like: Math.round(feels_like),\r\n            pressure: pressure,\r\n            humidity: humidity,\r\n            windSpeed: speed,\r\n            windDeg: deg,\r\n            rain1h: rain1h\r\n        };\r\n    }\r\n\r\n    _incrementApiCallCount = () => {\r\n        let count = ls.get('api-call-count');\r\n        count = count !== undefined ? count : 0;\r\n        count = count + 1;\r\n        ls.set('api-call-count', count, dayMs);\r\n        console.warn(`WARNING: API CALL, YOU ONLY HAVE 1'000 of these. Count ${count}.`);\r\n    }\r\n\r\n};\r\n\r\n\r\n// const exclude = '&exclude=alerts,minutely,hourly,daily'\r\n// const exclude = '';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport { Provider } from 'react-redux';\nimport { store } from './Components/Redux'\nimport WeatherApiService from './Services/WeatherApiService';\nimport OWMService from './Services/OWMService';\n\nimport {\n    OWMProvider,\n    WeatherAPIProvider,\n} from './Components/Context';\n\nimport './index.scss';\n\nconst weatherApiService = new WeatherApiService();\nconst openWeatherMapService = new OWMService();\n\nconst update = () => {\n    ReactDOM.render(\n        <OWMProvider value={openWeatherMapService}>\n            <WeatherAPIProvider value={weatherApiService}>\n                <Provider store={store}>\n                    <App store={store} />\n                </Provider>\n            </WeatherAPIProvider>\n        </OWMProvider>\n        , document.getElementById('root'));\n}\n\nupdate();\nstore.subscribe(update);"],"sourceRoot":""}