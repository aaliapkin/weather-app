{"version":3,"sources":["Components/Cities/Cities.js","Components/Cities/index.js","Services/OWMService.js","Components/Header/index.js","Components/Header/Header.js","Components/Spinner/index.js","Components/Spinner/Spinner.js","Components/Error/ErrorBoundary.js","Components/HOC/WithData.js","Components/Error/ErrorButton.js","redux.js","Components/CurrentWeather/index.js","Components/CurrentWeather/CurrentWeather.js","Components/Forecast/Forecast.js","Components/Forecast/index.js","Services/WeatherApiService.js","Components/Hourly/Hourly.js","Components/Hourly/index.js","Components/Details/index.js","Components/Details/Details.js","Components/App/App.js","Components/App/index.js","index.js"],"names":["Cities","state","cities","name","temp","weather","logo","loading","error","this","setState","elements","map","key","to","callBack","setCity","className","Component","Element","Fragment","ls","require","sleep","ms","Promise","resolve","setTimeout","OWMService","_apiBase","_apiKey","_units","getResource","param","storage","a","data","get","fetch","res","ok","Error","status","json","_incrementApiCallCount","set","getCurrentWeather","city","_transformCurrentWeather","getForecastWeather","_transformForecastWeather","getDetailWeather","_transformDetailWeather","weatherData","dt","main","temp_max","temp_min","humidity","speed","wind","icon","date","Math","round","desc","high","low","list","forecast","days","p","forEach","item","id","Date","day","getDate","hours","getHours","newItem","weatherType","weatherTypeDesc","undefined","hours2","abs","push","sys","sunrise","sunset","all","clouds","pressure","feels_like","deg","rain","description","weatherDesc","weatherIcon","windSpeed","windDeg","rain1h","count","console","warn","Header","Spinner","role","ErrorBoundary","hasError","props","children","ErrorIndicator","withData","View","getData","update","then","catch","store","createStore","theme","action","type","CurrentWeather","WithData","d","getDay","slice","getMonth","getFullYear","dispatch","formatDate","src","alt","WeatherService","Forecast","componentUpdate","weatherService","onWeatherLoaded","onError","weekday","index","Hourly","min","max","el","in_min","out_min","rainChance","height","dateValue","time","style","Number","city_name","getHourlyWeather","_transformHourlytWeather","location","current","condition","code","text","last_updated_epoch","temp_c","weatherTypeIcon","forecastData","forecastday","arr","hour","time_epoch","chance_of_rain","length","Details","out","getMinutes","string","charAt","toUpperCase","formatTime","capitalizeFirstLetter","degreesToDirection","App","render","shouldComponentUpdate","log","componentDidMount","subscribe","path","exact","match","params","WeaterPage","getState","CitiesPage","DetailsPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4c9285bd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Cities.scss';\r\n\r\nexport default class Cities extends Component {\r\n\r\n    state = {\r\n        cities: [\r\n            { name: 'Moscow', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Saint Petersburg', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Novosibirsk', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Yekaterinburg', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Nizhny Novogorod', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Kazan', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Chelyabinsk', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Omsk', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Samara', temp: 5, weather: 'Rain', logo: 'logo' },\r\n            { name: 'Rostov-on-Don', temp: 5, weather: 'Rain', logo: 'logo' }\r\n        ],\r\n        loading: false,\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { cities } = this.state;\r\n\r\n        const elements = cities.map(({ name }) => (\r\n            <Element key={name} name={name} to={`/city/${name}`} callBack={()=>this.setCity(name)} />\r\n        ));\r\n\r\n        return (\r\n            <div className=\"cities__container\">\r\n                <div className=\"cities__grid\">\r\n                    <Element name={'Local'} to=\"/\"/>\r\n                    {elements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Element = ({ name, callBack }) => (\r\n    <React.Fragment>\r\n        <h2 className=\"cities__name\">\r\n            <Link to={`/city/${name}`}>{name}</Link>\r\n        </h2>\r\n        <div className=\"cities__temp\">\r\n            15\r\n        </div>\r\n    </React.Fragment>\r\n);","import Cities from './Cities';\r\n\r\nexport default Cities;","const ls = require('localstorage-ttl');\r\n\r\nconst dayMs = 24 * 60 * 60 * 1000;\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default class OWMService {\r\n\r\n    _apiBase = 'https://api.openweathermap.org/data/2.5/';\r\n    _apiKey = 'ee09c403a1b18f3bc221c981d5a7cf99';\r\n    _units = '&units=metric';\r\n\r\n    getResource = async (param, storage) => {\r\n        let data = ls.get(storage);\r\n        if (!data || false) {\r\n            const res = await fetch(`${this._apiBase}${param}&appid=${this._apiKey}`);\r\n            if (!res.ok) {\r\n                throw new Error(`Could not fetch ${param}, received ${res.status}`);\r\n            }\r\n            data = await res.json();\r\n            this._incrementApiCallCount();\r\n            ls.set(storage, data, dayMs);\r\n        }\r\n        //console.log(storage + '_dump', data);\r\n        await sleep(500);\r\n        return data;\r\n    }\r\n\r\n    getCurrentWeather = async ({ city }) => {\r\n        const data = await this.getResource(`weather?q=${city}${this._units}`, 'current_weather_openweathermap_' + city)\r\n        return this._transformCurrentWeather(data);\r\n    };\r\n\r\n    getForecastWeather = async ({ city }) => {\r\n        const data = await this.getResource(`forecast?q=${city}${this._units}`, 'forecast_weather_openweathermap' + city)\r\n        return this._transformForecastWeather(data);\r\n    };\r\n\r\n    getDetailWeather = async ({ city }) => {\r\n        const data = await this.getResource(`weather?q=${city}${this._units}`, 'detail_weather_openweathermap' + city)\r\n        return this._transformDetailWeather(data);\r\n    };\r\n\r\n    _transformCurrentWeather = (weatherData) => {\r\n        const {\r\n            dt,\r\n            name,\r\n            main: {\r\n                temp,\r\n                temp_max,\r\n                temp_min,\r\n                humidity\r\n            },\r\n            weather,\r\n            wind: {\r\n                speed\r\n            }\r\n        } = weatherData;\r\n\r\n        const { main, icon } = weather[0];\r\n        return {\r\n            name: name,\r\n            date: dt,\r\n            temp: Math.round(temp),\r\n            desc: main,\r\n            icon: icon,\r\n            high: Math.round(temp_max),\r\n            low: Math.round(temp_min),\r\n            wind: speed,\r\n            humidity: humidity\r\n        };\r\n    };\r\n\r\n    _transformForecastWeather = ({ list }) => {\r\n        const forecast = [];\r\n        const days = {};\r\n        list.forEach((item) => {\r\n            const { dt, main: { temp }, weather } = item;\r\n            const { id, main, icon } = weather[0];\r\n            const date = new Date(dt * 1000);\r\n            const day = date.getDate();\r\n            const hours = date.getHours();\r\n\r\n            const newItem = {\r\n                date: dt,\r\n                temp: Math.round(temp),\r\n                weatherType: id,\r\n                weatherTypeDesc: main,\r\n                icon: icon\r\n            };\r\n\r\n            if (days[day] !== undefined) {\r\n                const date2 = new Date(days[day].date * 1000);\r\n                const hours2 = date2.getHours();\r\n                if (Math.abs(hours - 12) < Math.abs(hours2 - 12)) {\r\n                    days[day] = newItem;\r\n                }\r\n            } else {\r\n                days[day] = newItem;\r\n            }\r\n        });\r\n        for (const p in days) {\r\n            forecast.push(days[p]);\r\n        }\r\n        return forecast;\r\n    };\r\n\r\n    _transformDetailWeather = (weatherData) => {\r\n\r\n        const {\r\n            dt,\r\n            name,\r\n            sys: {\r\n                sunrise,\r\n                sunset\r\n            },\r\n            clouds: {\r\n                all\r\n            },\r\n            main: {\r\n                temp,\r\n                temp_min,\r\n                temp_max,\r\n                pressure,\r\n                humidity,\r\n                feels_like\r\n            },\r\n            wind: {\r\n                speed,\r\n                deg\r\n            },\r\n            rain,\r\n            weather\r\n        } = weatherData;\r\n\r\n        const {\r\n            description,\r\n            icon\r\n        } = weather[0];\r\n\r\n        const rain1h = null;\r\n\r\n        if(rain !== undefined) {\r\n            const rain1h = rain['1h'];\r\n        }\r\n\r\n        return {\r\n            date: dt,\r\n            city: name,\r\n            sunrise: sunrise,\r\n            sunset: sunset,\r\n            clouds: all,\r\n            weatherDesc: description,\r\n            weatherIcon: icon,\r\n            temp: Math.round(temp),\r\n            temp_min: Math.round(temp_min),\r\n            temp_max: Math.round(temp_max),\r\n            feels_like: Math.round(feels_like),\r\n            pressure: pressure,\r\n            humidity: humidity,\r\n            windSpeed: speed,\r\n            windDeg: deg,\r\n            rain1h: rain1h\r\n        };\r\n    }\r\n\r\n    _incrementApiCallCount = () => {\r\n        let count = ls.get('api-call-count');\r\n        count = count !== undefined ? count : 0;\r\n        count = count + 1;\r\n        ls.set('api-call-count', count, dayMs);\r\n        console.warn(`WARNING: API CALL, YOU ONLY HAVE 1'000 of these. Count ${count}.`);\r\n    }\r\n\r\n};\r\n\r\n\r\n// const exclude = '&exclude=alerts,minutely,hourly,daily'\r\n// const exclude = '';","import Header from './Header';\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Header.scss';\r\n\r\nconst Header = ({ city, date }) => (\r\n    <div>\r\n        <div className=\"header__container\">\r\n            <h2 className=\"header__date\">{date}</h2>\r\n            <h2 className=\"header__city\">\r\n                <Link to='/cities'><i className=\"fa fa-map-marker\" />{city}</Link>\r\n            </h2>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport './Spinner.scss'\r\n\r\nexport default class Spinner extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"spinner__container\">\r\n                <div className=\"spinner-border spinner\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport './ErrorBoundary.scss';\r\n\r\nexport class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            hasError: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n        return this.props.children;\r\n    }\r\n};\r\n\r\nconst ErrorIndicator = () => (\r\n\r\n    <div className=\"error__container\">\r\n        <span className=\"error__icon\" />\r\n        <div className=\"error__desc\"><h1>Error!</h1>Something went wrong...</div>\r\n    </div>\r\n)\r\n\r\nexport {ErrorIndicator};\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\nimport Spinner from '../Spinner';\r\nimport {ErrorBoundary, ErrorIndicator } from '../Error';\r\n\r\nconst withData = (View, getData) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            data: null,\r\n            loading: true,\r\n            error: false\r\n        };\r\n\r\n        componentDidMount() {\r\n            this.update();\r\n        }\r\n\r\n        update() {\r\n            this.setState({\r\n                loading: true,\r\n                error: false\r\n            });\r\n\r\n            const param = this.props.param;\r\n\r\n            getData(param)\r\n                .then((data) => {\r\n                    this.setState({\r\n                        data,\r\n                        loading: false\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    this.setState({\r\n                        error: true,\r\n                        loading: false\r\n                    });\r\n                });\r\n        }\r\n\r\n\r\n        render() {\r\n            const { data, loading, error } = this.state;\r\n\r\n            if (loading) {\r\n                return <Spinner />;\r\n            }\r\n\r\n            if (error) {\r\n                return <ErrorIndicator />;\r\n            }\r\n\r\n            return (\r\n                <ErrorBoundary>\r\n                    <View {...this.props} data={data} />\r\n                </ErrorBoundary>\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport default withData;\r\n","import React, { Component } from 'react';\n\nexport class ErrorButton extends Component {\n\n  state = {\n    renderError: false\n  };\n\n  render() {\n    if (this.state.renderError) {\n      this.foo.bar = 0;\n    }\n\n    return (\n      <button\n        className=\"error-button btn btn-danger btn-sm\"\n        onClick={() => this.setState({renderError: true})}>\n        Throw Error\n      </button>\n    );\n  }\n}\n","import { createStore } from 'redux';\r\n\r\nconst reducer = (state = {\r\n  city: 'Moscow',\r\n  theme: 'warm'\r\n},\r\n  action) => {\r\n  switch (action.type) {\r\n    case 'SELECT_CITY':\r\n      state = {...state, city: action.city}\r\n      return state;\r\n\r\n    case 'SET_THEME':\r\n      state = {...state, theme: action.theme}\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport { store };","import CurrentWeather from './CurrentWeather';\r\n\r\nexport default CurrentWeather;\r\n","import React, { Component } from 'react';\r\nimport WeatherService from '../../Services/OWMService';\r\nimport Header from '../Header';\r\nimport './CurrentWeather.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { WithData } from '../HOC';\r\nimport { store } from '../../redux';\r\n\r\nclass CurrentWeather extends Component {\r\n\r\n    formatDate(date) {\r\n        const d = new Date(date * 1000);\r\n        const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        return (weekday[d.getDay()] + \", \" + (\"0\" + d.getDate()).slice(-2)\r\n            + \".\" + (\"0\" + (d.getMonth() + 1)).slice(-2) + \".\" + d.getFullYear());\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { temp } = this.props.data;\r\n        if (temp > 15) {\r\n            store.dispatch({ type: 'SET_THEME', theme: 'hot' });\r\n        } else if (temp > 5) {\r\n            store.dispatch({ type: 'SET_THEME', theme: 'warm' });\r\n        } else {\r\n            store.dispatch({ type: 'SET_THEME', theme: 'cold' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            date, name, temp, desc, icon, high,\r\n            low, wind, humidity\r\n        } = this.props.data;\r\n\r\n        return (\r\n            <div className=\"current-weather__container\">\r\n                <Header city={name} date={this.formatDate(date)} />\r\n                <div className=\"current-weather__container-inner\">\r\n                    <div className=\"current-weather__type-container\">\r\n                        <img\r\n                            className=\"current-weather__type-img\"\r\n                            src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"\" />\r\n                        <h3 className=\"current-weather__type-desc\">{desc}</h3>\r\n                    </div>\r\n                    <div className=\"current-weather__temp-container\">\r\n                        <h1 className=\"current-weather__temp\">\r\n                            {temp}\r\n                        </h1>\r\n                        <div className=\"current-weather__hilo-container\">\r\n                            <div className=\"current-weather__hilo-element\">\r\n                                <i className=\"current-weather__hilo-icon fa fa-chevron-up\" />\r\n                                <span className=\"current-weather__hilo-temp\">{high}</span>\r\n                            </div>\r\n                            <div className=\"current-weather__hilo-element\">\r\n                                <i className=\"current-weather__hilo-icon fa fa-chevron-down\" />\r\n                                <span className=\"current-weather__hilo-temp\">{low}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"current-weather__info-container\">\r\n                            <div className=\"current-weather__info\">\r\n                                <div className=\"current-weather__info-label\">\r\n                                    HUMIDITY\r\n                                </div>\r\n                                <div className=\"current-weather__info-value\">\r\n                                    {`${humidity}%`}\r\n                                </div>\r\n                                <div className=\"current-weather__info-label\">\r\n                                    WIND\r\n                                </div>\r\n                                <div className=\"current-weather__info-value\">\r\n                                    {`${wind}`}m/s\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Link to=\"/details\" className=\"khbtn current-weather__more-button\">More details</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst { getCurrentWeather } = new WeatherService();\r\n\r\nexport default WithData(CurrentWeather, getCurrentWeather);","import React, { Component } from 'react';\r\nimport WeatherService from '../../Services/OWMService';\r\nimport './Forecast.scss'\r\nimport { WithData } from '../HOC'\r\n\r\nclass Forecast extends Component {\r\n\r\n    componentUpdate = () => {\r\n        this.weatherService\r\n            .getForecastWeather(\"Moscow\")\r\n            .then(this.onWeatherLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onWeatherLoaded = (forecast) => {\r\n        this.setState({\r\n            forecast,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    formatDate(date) {\r\n        const d = new Date(date * 1000);\r\n        const weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        return {\r\n            weekday: weekday[d.getDay()],\r\n            day: (\"0\" + d.getDate()).slice(-2) + \".\" + (\"0\" + (d.getMonth() + 1)).slice(-2)\r\n        };\r\n    }\r\n\r\n    formatTemp(temp) {\r\n        if (temp > 0) {\r\n            return `+${temp}`;\r\n        } else {\r\n            return `${temp}`;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.data;\r\n\r\n        return (\r\n            <div className=\"forecast__container\">\r\n                <React.Fragment>\r\n                    {data.map(({ date, temp, icon }, index) => {\r\n                        let { weekday, day } = this.formatDate(date);\r\n                        weekday = (index === 0) ? 'Today' : weekday;\r\n                        return <Element key={date} weekday={weekday} day={day} temp={temp} icon={icon} />;\r\n                    })}\r\n                </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Element = ({ day, weekday, temp, icon }) => {\r\n\r\n    return <div className=\"forecast-item__container\">\r\n        <div className=\"forecast-item__date\">\r\n            {weekday}\r\n        </div>\r\n        <div className=\"forecast-item__date\">\r\n            {day}\r\n        </div>\r\n        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"\" />\r\n        <div className=\"forecast-item__temp\">\r\n            {temp}\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nconst { getForecastWeather } = new WeatherService();\r\n\r\nexport default WithData(Forecast, getForecastWeather);","import Forecast from './Forecast';\r\nexport default Forecast;","const ls = require('localstorage-ttl');\r\n\r\nconst dayMs = 24 * 60 * 60 * 1000;\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default class WeatherApiService {\r\n\r\n    _apiBase = 'http://api.weatherapi.com/v1/';\r\n    _apiKey = '3ad9b2d2abb245dbb8e205619202010';\r\n\r\n    getResource = async (param, storage) => {\r\n        let data = ls.get(storage);\r\n        if (!data || false) {\r\n            //'http://api.weatherapi.com/v1/forecast.json?key=3ad9b2d2abb245dbb8e205619202010&q=Moscow&days=3'\r\n            const res = await fetch(`${this._apiBase}${param}`);\r\n            if (!res.ok) {\r\n                throw new Error(`Could not fetch ${param}, received ${res.status}`);\r\n            }\r\n            data = await res.json();\r\n            this._incrementApiCallCount();\r\n            ls.set(storage, data, dayMs);\r\n        }\r\n        // console.log(storage + '_dump', data);\r\n        await sleep(500);\r\n        return data;\r\n    }\r\n\r\n    getCurrentWeather = async (city_name) => {\r\n        const data = await this.getResource(`current.json?key=${this._apiKey}&q=${city_name}&days=5`, 'current_weather_weatherapi')\r\n        return this._transformCurrentWeather(data);\r\n    };\r\n\r\n    getForecastWeather = async (city_name) => {\r\n        const data = await this.getResource(`forecast.json?key=${this._apiKey}&q=${city_name}&days=5`, 'forecast_weather_weatherapi')\r\n        return this._transformForecastWeather(data);\r\n    };\r\n\r\n    getHourlyWeather = async ({city}) => {\r\n        const data = await this.getResource(`forecast.json?key=${this._apiKey}&q=${city}&days=3`, 'hourly_weather_weatherapi_'+city)\r\n        return this._transformHourlytWeather(data);\r\n    }\r\n\r\n    _transformCurrentWeather = (weatherData) => {\r\n        const {\r\n            location: {\r\n                name,\r\n            },\r\n            current: {\r\n                condition: {\r\n                    code,\r\n                    icon,\r\n                    text\r\n                },\r\n                last_updated_epoch,\r\n                temp_c,\r\n            }\r\n        } = weatherData;\r\n        return {\r\n            name: name,\r\n            date: last_updated_epoch,\r\n            temp: Math.round(temp_c),\r\n            weatherType: code,\r\n            weatherTypeDesc: text,\r\n            weatherTypeIcon: icon,\r\n            high: Math.round(0),\r\n            low: Math.round(0)\r\n        };\r\n    };\r\n\r\n    _transformForecastWeather = (forecastData) => {\r\n        return forecastData;\r\n    };\r\n\r\n    _transformHourlytWeather = ({ forecast: { forecastday }, current: { last_updated_epoch } }) => {\r\n        const arr = [];\r\n        forecastday.forEach(({ hour }) => {\r\n            hour.forEach(({ time_epoch,time, temp_c, chance_of_rain }) => {\r\n                if (arr.length >= 24) {\r\n                    return;\r\n                }\r\n                if (time_epoch > last_updated_epoch) {\r\n                    arr.push(\r\n                        {\r\n                            date: time_epoch,\r\n                            time: time,\r\n                            temp: Math.round(temp_c),\r\n                            rainChance: chance_of_rain\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n        });\r\n        return arr;\r\n    }\r\n\r\n    _incrementApiCallCount = () => {\r\n        let count = ls.get('api-call-count');\r\n        count = count !== undefined ? count : 0;\r\n        count = count + 1;\r\n        ls.set('api-call-count', count, dayMs);\r\n        console.warn(`WARNING: API CALL, YOU ONLY HAVE 1'000'000 of these. Count ${count}.`);\r\n    }\r\n\r\n};\r\n\r\n\r\n// const exclude = '&exclude=alerts,minutely,hourly,daily'\r\n// const exclude = '';","import React, { Component } from 'react';\r\nimport './Hourly.scss';\r\nimport WeatherService from '../../Services/WeatherApiService'\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport { WithData } from '../HOC';\r\n\r\nfunction map(x, in_min, in_max, out_min, out_max) {\r\n    return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n}\r\n\r\nclass Hourly extends Component {\r\n    formatDate(date) {\r\n        const d = new Date(date * 1000);\r\n        return d.getHours() + 'h';\r\n    }\r\n\r\n    render() {\r\n        const { theme, data } = this.props;\r\n\r\n        let min = 0, max = 0;\r\n        data.forEach((el) => {\r\n            min = el.temp < min ? el.temp : min;\r\n            max = el.temp > max ? el.temp : max;\r\n        });\r\n\r\n        return (\r\n            <div className=\"hourly__container\">\r\n                <React.Fragment>\r\n                    <ScrollContainer className=\"hourly__scrollcontainer\">\r\n                        <div className=\"hourly__scroll\">\r\n                            {data.map(({ temp, date, rainChance }, index) => {\r\n                                let height = map(temp, min, max, 100, 180);\r\n                                const dateValue = (index === 0) ? 'Now' : this.formatDate(date);\r\n                                return (\r\n                                    <Element\r\n                                        key={date}\r\n                                        temp={temp}\r\n                                        time={dateValue}\r\n                                        rainChance={rainChance}\r\n                                        height={height}\r\n                                        theme={theme} />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </ScrollContainer>\r\n                </React.Fragment>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Element = ({ temp, time, height, rainChance, theme }) => {\r\n    const style = {\r\n        height: `${height}px`\r\n    };\r\n    let rain = '';\r\n    if (Number(rainChance) !== 0) {\r\n        rain = (\r\n            <div className=\"hourly__rain\">\r\n                <img src={`http://openweathermap.org/img/wn/10d@2x.png`} alt=\"\" />\r\n                <span className=\"hourly__rain-percent\">{`${rainChance}%`}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"hourly__element-container\">\r\n            <div className={`hourly__element ${theme}`} style={style}>\r\n                <div className=\"hourly__element-tempgroup\">\r\n                    <div className=\"hourly__temp\">{temp}</div>\r\n                    {rain}\r\n                </div>\r\n                <div className=\"hourly__time\">{time}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst { getHourlyWeather } = new WeatherService();\r\n\r\nexport default WithData(Hourly, getHourlyWeather);","import Hourly from './Hourly';\r\nexport default Hourly;","import Details from './Details';\r\n\r\nexport default Details;","import React, { Component } from 'react';\r\nimport WithData from '../HOC/WithData';\r\nimport WeatherService from '../../Services/OWMService';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Details.scss';\r\n\r\nclass Details extends Component {\r\n\r\n    degreesToDirection(deg) {\r\n        const dirArr = ['NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW', 'N'];\r\n        let out = 'N';\r\n        dirArr.forEach((el, index) => {\r\n            if (deg >= (360 / 32 + 360 / 16 * index)) {\r\n                out = el;\r\n            }\r\n        });\r\n        return out;\r\n    }\r\n\r\n    formatDate(date) {\r\n        const d = new Date(date * 1000);\r\n        const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        return (weekday[d.getDay()] + \", \" + (\"0\" + d.getDate()).slice(-2)\r\n            + \".\" + (\"0\" + (d.getMonth() + 1)).slice(-2) + \".\" + d.getFullYear());\r\n    }\r\n\r\n    formatTime(date) {\r\n        const d = new Date(date * 1000);\r\n        return (d.getHours() + ':' + (\"0\" + d.getMinutes()).slice(-2));\r\n    }\r\n\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    render() {\r\n        const { date, city, clouds, humidity, pressure, rain1h, sunrise, sunset, temp, feels_like,\r\n            temp_max, temp_min, weatherDesc, weatherIcon, windDeg, windSpeed } = this.props.data;\r\n\r\n        return (\r\n            <div className=\"details__container\">\r\n                <Link className=\"details__button-back\" to=\"/\"><i className=\"fa fa-arrow-left\" /></Link>\r\n                <div className=\"details__column\">\r\n                    <div className=\"details__city\">\r\n                        <div className=\"details__city-label\">Last updated</div>\r\n                        <div className=\"details__city-value\">{`${this.formatTime(date)} ${this.formatDate(date)}`}</div>\r\n                        <div className=\"details__city-label\">Location</div>\r\n                        <div className=\"details__city-value\">\r\n                            <Link to=\"/cities\" className=\"details__city-link\">\r\n                                <i className=\"fa fa-map-marker\" />{city}\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"details__main-container\">\r\n                        <div className=\"details__temp-group\">\r\n                            <div className=\"details__temp\">{temp}</div>\r\n                            <div className=\"details__temp-details\">\r\n                                <div className=\"details__label-temp \">Feels like</div>\r\n                                <div className=\"details__value temp\">{feels_like}</div>\r\n                                <div className=\"details__label-temp\">Min</div>\r\n                                <div className=\"details__value temp\">{temp_min}</div>\r\n                                <div className=\"details__label-temp\">Max</div>\r\n                                <div className=\"details__value temp\">{temp_max}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"details__weather-group\">\r\n                            <img\r\n                                className=\"details__weather-img\"\r\n                                src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`} alt=\"\" />\r\n                            <div className=\"details__weather-label\">{`${this.capitalizeFirstLetter(weatherDesc)}`}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bottom__columns\">\r\n                        <div className=\"bottom__left\">\r\n                            <div className=\"bottom__col\">\r\n                                <div className=\"details__label\">Cloudness</div>\r\n                                <div className=\"details__value\">{`${clouds} %`}</div>\r\n                                <div className=\"details__label\">Humidity</div>\r\n                                <div className=\"details__value\">{`${humidity} %`}</div>\r\n                                <div className=\"details__label\">Pressure</div>\r\n                                <div className=\"details__value\">{`${pressure} hPa`}</div>\r\n                                {rain1h !== null ? <>\r\n                                    <div className=\"details__label\">Amount of rain for the last hour</div>\r\n                                    <div className=\"details__value\">{`${rain1h} mm`}</div>\r\n                                </> : null\r\n                                }\r\n                                <div className=\"details__label\">Wind Direction</div>\r\n                                <div className=\"details__value\">{`${this.degreesToDirection(windDeg)}`}</div>\r\n                                <div className=\"details__label\">Wind speed</div>\r\n                                <div className=\"details__value\">{`${windSpeed} m/s`}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bottom__right\">\r\n                            <div className=\"bottom__col\">\r\n                                <div className=\"details__label\">Sunrise time</div>\r\n                                <div className=\"details__value\">{this.formatTime(sunrise)}</div>\r\n                                <div className=\"details__label\">Sunset time</div>\r\n                                <div className=\"details__value\">{this.formatTime(sunset)}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst { getDetailWeather } = new WeatherService();\r\n\r\nexport default WithData(Details, getDetailWeather);","import React, { Component } from 'react';\nimport Cities from '../Cities';\nimport CurrentWeather from '../CurrentWeather';\nimport Forecast from '../Forecast';\nimport Hourly from '../Hourly';\nimport Details from '../Details'\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { ErrorBoundary } from '../Error';\nimport { store } from '../../redux';\n\nimport './App.scss';\n\nexport default class App extends Component {\n\n  update = () => {\n    this.render();\n  }\n\n  shouldComponentUpdate = () => {\n    console.log('or wont');\n  }\n\n  componentDidMount = () => {\n    store.subscribe(this.update);\n  }\n\n  render() {\n    return (\n      <ErrorBoundary>\n        <BrowserRouter>\n          <Route path=\"/\" exact render={() => (\n            <WeaterPage />\n          )} />\n          <Route path=\"/city/:id\" render={(props) => {\n            const { match: { params: { id } } } = props;\n            store.dispatch({ type: 'SELECT_CITY', city: id });\n            return <WeaterPage />;\n          }} />\n          <Route path=\"/cities\" render={() => (\n            <CitiesPage />\n          )} />\n          <Route path=\"/details\" render={() => {\n            return (\n              <DetailsPage />\n            );\n          }} />\n        </BrowserRouter>\n      </ErrorBoundary>\n    );\n  }\n}\n\nconst WeaterPage = () => {\n  const { city, theme } = store.getState();\n  return (\n    <div className=\"app\">\n      <div className={`app__top-container ${theme}`}>\n        <CurrentWeather param={{ city: city }} />\n        <Hourly param={{ city: city }} theme={theme} />\n      </div>\n      <div className=\"app__bottom-container\">\n        <Forecast param={{ city: city }} />\n      </div>\n    </div>\n  );\n};\n\nconst CitiesPage = () => {\n  const { city, theme } = store.getState();\n  return (\n    <div className=\"app\">\n      <div className={`app__full-container ${theme}`}>\n        <Cities />\n      </div>\n    </div>\n  );\n}\n\nconst DetailsPage = () => {\n  const { city, theme } = store.getState();\n  return (<div className=\"app\">\n    <div className={`app__full-container--grad ${theme}`}>\n      <Details param={{ city: city }} />\n    </div>\n  </div>);\n};","import App from './App';\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}